{"version":3,"file":"main.0ff7a212535608528375.js","mappings":";;;;;;;;;;;;;AAAA;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AA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","sources":["webpack://face-detection-app/./src/styles.css","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-data/dist/util|string_decoder","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/seedrandom|crypto","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|worker_threads","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-data/dist/iterators|string_decoder","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|path","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-core/dist/platforms|node-fetch","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|perf_hooks","webpack://face-detection-app/./node_modules/@vladmandic/face-api/dist/ sync","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|os","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-data/dist/sources|fs","webpack://face-detection-app/./src/styles.css?44b2","webpack://face-detection-app/./src/config.js","webpack://face-detection-app/./src/faceDetection.js","webpack://face-detection-app/./src/drawingUtils.js","webpack://face-detection-app/./src/cameraUtils.js","webpack://face-detection-app/./src/performanceMonitor.js","webpack://face-detection-app/./src/liteMode.js","webpack://face-detection-app/./src/landmarkDrawing.js","webpack://face-detection-app/./src/proMode.js","webpack://face-detection-app/./src/wasmBackend.js","webpack://face-detection-app/./src/index-wasm.js","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-core/dist/platforms|util","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|fs"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\n  background-color: #f5f5f5;\n  color: #333;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: center;\n}\n\nh1 {\n  color: #2c3e50;\n  margin-bottom: 30px;\n}\n\n.video-container {\n  position: relative;\n  display: inline-block;\n  margin: 20px auto;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n#video {\n  display: block;\n  transform: scaleX(-1);\n}\n\n#overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: scaleX(-1);\n}\n\n.controls {\n  margin: 20px 0;\n}\n\n.mode-selector {\n  margin-bottom: 15px;\n  padding: 15px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.mode-selector label {\n  margin: 0 15px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.mode-selector input[type=\"radio\"] {\n  margin-right: 5px;\n  cursor: pointer;\n}\n\n.threshold-control {\n  margin-top: 15px;\n  padding: 15px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.threshold-control label {\n  display: block;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.threshold-control input[type=\"range\"] {\n  width: 100%;\n  max-width: 300px;\n  margin: 0 auto;\n  display: block;\n}\n\n#thresholdValue {\n  color: #3498db;\n  font-weight: bold;\n}\n\n.btn {\n  padding: 10px 20px;\n  margin: 0 10px;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.btn-primary {\n  background-color: #3498db;\n  color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background-color: #2980b9;\n}\n\n.btn-secondary {\n  background-color: #e74c3c;\n  color: white;\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background-color: #c0392b;\n}\n\n.stats {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n}\n\n.stats p {\n  margin: 10px 0;\n  font-size: 14px;\n}\n\n.error {\n  background-color: #fee;\n  color: #c33;\n  padding: 20px;\n  border-radius: 8px;\n  margin: 20px auto;\n  max-width: 600px;\n}\n\n.loading {\n  text-align: center;\n  padding: 50px;\n}\n\n.loading h2 {\n  color: #666;\n}\n\n@media (max-width: 768px) {\n  .container {\n    padding: 10px;\n  }\n\n  .video-container {\n    width: 100%;\n    max-width: 400px;\n  }\n\n  #video, #overlay {\n    width: 100%;\n    height: auto;\n  }\n\n  .btn {\n    padding: 8px 16px;\n    font-size: 14px;\n  }\n}\n\n/* Pro Mode Styles */\n.pro-controls {\n  margin-top: 15px;\n  padding: 15px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  text-align: left;\n}\n\n.pro-controls h3 {\n  margin: 0 0 15px 0;\n  color: #2c3e50;\n  font-size: 16px;\n  text-align: center;\n}\n\n.pro-controls label {\n  display: block;\n  margin: 8px 0;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 5px 0;\n}\n\n.pro-controls label:hover {\n  color: #3498db;\n}\n\n.pro-controls input[type=\"checkbox\"] {\n  margin-right: 8px;\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n}\n\n/* Pro mode canvas styling */\n.video-container.pro-mode {\n  border: 2px solid #3498db;\n  box-shadow: 0 0 20px rgba(52, 152, 219, 0.3);\n}\n\n/* Animation for landmark transitions */\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.1);\n    opacity: 0.8;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n.landmark-point {\n  animation: pulse 2s ease-in-out infinite;\n}\n\n/* Expression labels styling */\n.expression-label {\n  background-color: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n/* Stats styling for pro mode */\n.stats.pro-mode {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n}\n\n.stats.pro-mode p {\n  color: white;\n}\n\n.stats.pro-mode strong {\n  color: #ffd700;\n}\n\n/* Camera Selector Styles */\n.camera-selector {\n  margin: 10px 0;\n  padding: 10px;\n  background: #f9f9f9;\n  border-radius: 5px;\n}\n\n.camera-selector label {\n  display: inline-block;\n  margin-right: 10px;\n  font-weight: bold;\n}\n\n.camera-selector select {\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  background: white;\n  font-size: 14px;\n  cursor: pointer;\n  min-width: 200px;\n}\n\n.camera-selector select:hover {\n  border-color: #3498db;\n}\n\n.camera-selector select:focus {\n  outline: none;\n  border-color: #3498db;\n  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"* {\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\\n  background-color: #f5f5f5;\\n  color: #333;\\n}\\n\\n.container {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  text-align: center;\\n}\\n\\nh1 {\\n  color: #2c3e50;\\n  margin-bottom: 30px;\\n}\\n\\n.video-container {\\n  position: relative;\\n  display: inline-block;\\n  margin: 20px auto;\\n  border-radius: 8px;\\n  overflow: hidden;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n}\\n\\n#video {\\n  display: block;\\n  transform: scaleX(-1);\\n}\\n\\n#overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  transform: scaleX(-1);\\n}\\n\\n.controls {\\n  margin: 20px 0;\\n}\\n\\n.mode-selector {\\n  margin-bottom: 15px;\\n  padding: 15px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.mode-selector label {\\n  margin: 0 15px;\\n  cursor: pointer;\\n  font-size: 14px;\\n}\\n\\n.mode-selector input[type=\\\"radio\\\"] {\\n  margin-right: 5px;\\n  cursor: pointer;\\n}\\n\\n.threshold-control {\\n  margin-top: 15px;\\n  padding: 15px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.threshold-control label {\\n  display: block;\\n  margin-bottom: 10px;\\n  font-weight: 500;\\n  font-size: 14px;\\n}\\n\\n.threshold-control input[type=\\\"range\\\"] {\\n  width: 100%;\\n  max-width: 300px;\\n  margin: 0 auto;\\n  display: block;\\n}\\n\\n#thresholdValue {\\n  color: #3498db;\\n  font-weight: bold;\\n}\\n\\n.btn {\\n  padding: 10px 20px;\\n  margin: 0 10px;\\n  border: none;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.btn:disabled {\\n  opacity: 0.6;\\n  cursor: not-allowed;\\n}\\n\\n.btn-primary {\\n  background-color: #3498db;\\n  color: white;\\n}\\n\\n.btn-primary:hover:not(:disabled) {\\n  background-color: #2980b9;\\n}\\n\\n.btn-secondary {\\n  background-color: #e74c3c;\\n  color: white;\\n}\\n\\n.btn-secondary:hover:not(:disabled) {\\n  background-color: #c0392b;\\n}\\n\\n.stats {\\n  background-color: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  margin-top: 20px;\\n}\\n\\n.stats p {\\n  margin: 10px 0;\\n  font-size: 14px;\\n}\\n\\n.error {\\n  background-color: #fee;\\n  color: #c33;\\n  padding: 20px;\\n  border-radius: 8px;\\n  margin: 20px auto;\\n  max-width: 600px;\\n}\\n\\n.loading {\\n  text-align: center;\\n  padding: 50px;\\n}\\n\\n.loading h2 {\\n  color: #666;\\n}\\n\\n@media (max-width: 768px) {\\n  .container {\\n    padding: 10px;\\n  }\\n\\n  .video-container {\\n    width: 100%;\\n    max-width: 400px;\\n  }\\n\\n  #video, #overlay {\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .btn {\\n    padding: 8px 16px;\\n    font-size: 14px;\\n  }\\n}\\n\\n/* Pro Mode Styles */\\n.pro-controls {\\n  margin-top: 15px;\\n  padding: 15px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  text-align: left;\\n}\\n\\n.pro-controls h3 {\\n  margin: 0 0 15px 0;\\n  color: #2c3e50;\\n  font-size: 16px;\\n  text-align: center;\\n}\\n\\n.pro-controls label {\\n  display: block;\\n  margin: 8px 0;\\n  cursor: pointer;\\n  font-size: 14px;\\n  padding: 5px 0;\\n}\\n\\n.pro-controls label:hover {\\n  color: #3498db;\\n}\\n\\n.pro-controls input[type=\\\"checkbox\\\"] {\\n  margin-right: 8px;\\n  cursor: pointer;\\n  width: 16px;\\n  height: 16px;\\n}\\n\\n/* Pro mode canvas styling */\\n.video-container.pro-mode {\\n  border: 2px solid #3498db;\\n  box-shadow: 0 0 20px rgba(52, 152, 219, 0.3);\\n}\\n\\n/* Animation for landmark transitions */\\n@keyframes pulse {\\n  0% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n  50% {\\n    transform: scale(1.1);\\n    opacity: 0.8;\\n  }\\n  100% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n\\n.landmark-point {\\n  animation: pulse 2s ease-in-out infinite;\\n}\\n\\n/* Expression labels styling */\\n.expression-label {\\n  background-color: rgba(0, 0, 0, 0.8);\\n  color: white;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: bold;\\n}\\n\\n/* Stats styling for pro mode */\\n.stats.pro-mode {\\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n  color: white;\\n}\\n\\n.stats.pro-mode p {\\n  color: white;\\n}\\n\\n.stats.pro-mode strong {\\n  color: #ffd700;\\n}\\n\\n/* Camera Selector Styles */\\n.camera-selector {\\n  margin: 10px 0;\\n  padding: 10px;\\n  background: #f9f9f9;\\n  border-radius: 5px;\\n}\\n\\n.camera-selector label {\\n  display: inline-block;\\n  margin-right: 10px;\\n  font-weight: bold;\\n}\\n\\n.camera-selector select {\\n  padding: 5px 10px;\\n  border: 1px solid #ddd;\\n  border-radius: 3px;\\n  background: white;\\n  font-size: 14px;\\n  cursor: pointer;\\n  min-width: 200px;\\n}\\n\\n.camera-selector select:hover {\\n  border-color: #3498db;\\n}\\n\\n.camera-selector select:focus {\\n  outline: none;\\n  border-color: #3498db;\\n  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 7291;\nmodule.exports = webpackEmptyContext;","/* (ignored) */","/* (ignored) */","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Application configuration module\n * Handles runtime configuration including prefix support\n */\n\nexport class AppConfig {\n  constructor() {\n    this.config = this.loadConfig();\n  }\n\n  loadConfig() {\n    // Default configuration\n    const defaultConfig = {\n      prefix: '',\n      modelPath: '/models',\n      basePath: ''\n    };\n\n    // Try to load from window.APP_CONFIG (injected by nginx/entrypoint)\n    if (typeof window !== 'undefined' && window.APP_CONFIG) {\n      return { ...defaultConfig, ...window.APP_CONFIG };\n    }\n\n    // Fallback: Try to detect prefix from current URL path\n    if (typeof window !== 'undefined' && window.location) {\n      const path = window.location.pathname;\n      const pathParts = path.split('/').filter(Boolean);\n      \n      // Simple heuristic: if we're not at root and the first part doesn't look like a file\n      if (pathParts.length > 0 && !pathParts[0].includes('.')) {\n        const detectedPrefix = `/${pathParts[0]}`;\n        return {\n          ...defaultConfig,\n          prefix: detectedPrefix,\n          modelPath: `${detectedPrefix}/models`,\n          basePath: detectedPrefix\n        };\n      }\n    }\n\n    return defaultConfig;\n  }\n\n  get prefix() {\n    return this.config.prefix;\n  }\n\n  get modelPath() {\n    return this.config.modelPath;\n  }\n\n  get basePath() {\n    return this.config.basePath;\n  }\n\n  /**\n   * Get full URL for a given path, with prefix support\n   * @param {string} path - The path to prefix\n   * @returns {string} - Full prefixed path\n   */\n  getPath(path) {\n    // Remove leading slash from path\n    const cleanPath = path.replace(/^\\//, '');\n    \n    // If no prefix, just return the path with leading slash\n    if (!this.config.prefix) {\n      return `/${cleanPath}`;\n    }\n    \n    // Return prefixed path\n    return `${this.config.prefix}/${cleanPath}`;\n  }\n\n  /**\n   * Get model URL for face-api.js\n   * @returns {string} - Model path URL\n   */\n  getModelUrl() {\n    return this.config.modelPath;\n  }\n\n  /**\n   * Debug information\n   * @returns {object} - Current configuration\n   */\n  debug() {\n    return {\n      config: this.config,\n      currentPath: typeof window !== 'undefined' ? window.location.pathname : 'N/A',\n      currentHost: typeof window !== 'undefined' ? window.location.host : 'N/A'\n    };\n  }\n}\n\n// Export singleton instance\nexport const appConfig = new AppConfig();\n\n// Export for backward compatibility\nexport default appConfig;","import * as faceapi from '@vladmandic/face-api';\nimport { appConfig } from './config.js';\n\nexport class FaceDetector {\n  constructor(options = {}) {\n    this.options = {\n      modelPath: options.modelPath || appConfig.getModelUrl(),\n      detectionThreshold: options.detectionThreshold || 0.5,\n      inputSize: options.inputSize || 416,\n      ...options\n    };\n    \n    this.isModelLoaded = false;\n    this.detector = null;\n  }\n\n  async loadModel() {\n    try {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(this.options.modelPath);\n      this.detector = new faceapi.TinyFaceDetectorOptions({\n        inputSize: this.options.inputSize,\n        scoreThreshold: this.options.detectionThreshold\n      });\n      this.isModelLoaded = true;\n      return true;\n    } catch (error) {\n      console.error('Failed to load face detection model:', error);\n      throw new Error('Model loading failed: ' + error.message);\n    }\n  }\n\n  async detect(input) {\n    if (!this.isModelLoaded) {\n      throw new Error('Model not loaded. Call loadModel() first.');\n    }\n\n    try {\n      const detections = await faceapi.detectAllFaces(input, this.detector);\n      return detections;\n    } catch (error) {\n      console.error('Face detection failed:', error);\n      return [];\n    }\n  }\n\n  async detectWithLandmarks(input) {\n    if (!this.isModelLoaded) {\n      throw new Error('Model not loaded. Call loadModel() first.');\n    }\n\n    try {\n      const detections = await faceapi.detectAllFaces(input, this.detector)\n        .withFaceLandmarks();\n      return detections;\n    } catch (error) {\n      console.error('Face detection with landmarks failed:', error);\n      return [];\n    }\n  }\n\n  setDetectionThreshold(threshold) {\n    if (threshold < 0 || threshold > 1) {\n      throw new Error('Threshold must be between 0 and 1');\n    }\n    \n    this.options.detectionThreshold = threshold;\n    this.detector = new faceapi.TinyFaceDetectorOptions({\n      inputSize: this.options.inputSize,\n      scoreThreshold: threshold\n    });\n  }\n\n  setInputSize(size) {\n    const validSizes = [128, 160, 224, 320, 416, 512, 608];\n    if (!validSizes.includes(size)) {\n      throw new Error(`Input size must be one of: ${validSizes.join(', ')}`);\n    }\n    \n    this.options.inputSize = size;\n    this.detector = new faceapi.TinyFaceDetectorOptions({\n      inputSize: size,\n      scoreThreshold: this.options.detectionThreshold\n    });\n  }\n\n  getOptions() {\n    return { ...this.options };\n  }\n\n  isReady() {\n    return this.isModelLoaded;\n  }\n}\n\nexport default FaceDetector;","export class DrawingUtils {\n  constructor(canvas = null) {\n    this.canvas = canvas;\n    this.ctx = canvas ? canvas.getContext('2d') : null;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n  }\n\n  clear() {\n    if (!this.ctx) return;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  drawBoundingBox(box, color = '#00ff00', lineWidth = 2) {\n    if (!this.ctx) return;\n\n    const { x, y, width, height } = box;\n    \n    this.ctx.strokeStyle = color;\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeRect(x, y, width, height);\n  }\n\n  drawFilledBox(box, fillColor = 'rgba(0, 255, 0, 0.2)', borderColor = '#00ff00', borderWidth = 2) {\n    if (!this.ctx) return;\n\n    const { x, y, width, height } = box;\n    \n    // Fill\n    this.ctx.fillStyle = fillColor;\n    this.ctx.fillRect(x, y, width, height);\n    \n    // Border\n    if (borderWidth > 0) {\n      this.ctx.strokeStyle = borderColor;\n      this.ctx.lineWidth = borderWidth;\n      this.ctx.strokeRect(x, y, width, height);\n    }\n  }\n\n  drawText(text, x, y, options = {}) {\n    if (!this.ctx) return;\n\n    const {\n      color = '#ffffff',\n      font = '16px Arial',\n      align = 'left',\n      baseline = 'top',\n      backgroundColor = null,\n      padding = 0,\n      borderRadius = 0\n    } = options;\n\n    this.ctx.font = font;\n    this.ctx.textAlign = align;\n    this.ctx.textBaseline = baseline;\n\n    // Measure text for background\n    const metrics = this.ctx.measureText(text);\n    const textWidth = metrics.width;\n    const textHeight = parseInt(font); // Approximate height\n\n    // Draw background if specified\n    if (backgroundColor) {\n      if (borderRadius > 0) {\n        this.drawRoundedRect(\n          x - padding,\n          y - padding,\n          textWidth + padding * 2,\n          textHeight + padding * 2,\n          borderRadius,\n          backgroundColor\n        );\n      } else {\n        this.ctx.fillStyle = backgroundColor;\n        this.ctx.fillRect(\n          x - padding,\n          y - padding,\n          textWidth + padding * 2,\n          textHeight + padding * 2\n        );\n      }\n    }\n\n    // Draw text\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(text, x, y);\n  }\n\n  drawRoundedRect(x, y, width, height, radius, fillColor) {\n    if (!this.ctx) return;\n\n    this.ctx.fillStyle = fillColor;\n    this.ctx.beginPath();\n    this.ctx.moveTo(x + radius, y);\n    this.ctx.lineTo(x + width - radius, y);\n    this.ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    this.ctx.lineTo(x + width, y + height - radius);\n    this.ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    this.ctx.lineTo(x + radius, y + height);\n    this.ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    this.ctx.lineTo(x, y + radius);\n    this.ctx.quadraticCurveTo(x, y, x + radius, y);\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n\n  drawPoint(x, y, radius = 3, color = '#ff0000') {\n    if (!this.ctx) return;\n\n    this.ctx.fillStyle = color;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n  }\n\n  drawLine(x1, y1, x2, y2, color = '#00ff00', lineWidth = 1) {\n    if (!this.ctx) return;\n\n    this.ctx.strokeStyle = color;\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.beginPath();\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.stroke();\n  }\n\n  drawPolygon(points, options = {}) {\n    if (!this.ctx || !points || points.length < 3) return;\n\n    const {\n      fillColor = null,\n      strokeColor = '#00ff00',\n      lineWidth = 1,\n      closed = true\n    } = options;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(points[0].x, points[0].y);\n    \n    for (let i = 1; i < points.length; i++) {\n      this.ctx.lineTo(points[i].x, points[i].y);\n    }\n    \n    if (closed) {\n      this.ctx.closePath();\n    }\n\n    if (fillColor) {\n      this.ctx.fillStyle = fillColor;\n      this.ctx.fill();\n    }\n\n    if (strokeColor && lineWidth > 0) {\n      this.ctx.strokeStyle = strokeColor;\n      this.ctx.lineWidth = lineWidth;\n      this.ctx.stroke();\n    }\n  }\n\n  drawCircle(x, y, radius, options = {}) {\n    if (!this.ctx) return;\n\n    const {\n      fillColor = null,\n      strokeColor = '#00ff00',\n      lineWidth = 1\n    } = options;\n\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n\n    if (fillColor) {\n      this.ctx.fillStyle = fillColor;\n      this.ctx.fill();\n    }\n\n    if (strokeColor && lineWidth > 0) {\n      this.ctx.strokeStyle = strokeColor;\n      this.ctx.lineWidth = lineWidth;\n      this.ctx.stroke();\n    }\n  }\n\n  drawImage(image, x, y, width = null, height = null) {\n    if (!this.ctx) return;\n\n    if (width && height) {\n      this.ctx.drawImage(image, x, y, width, height);\n    } else {\n      this.ctx.drawImage(image, x, y);\n    }\n  }\n\n  setGlobalAlpha(alpha) {\n    if (!this.ctx) return;\n    this.ctx.globalAlpha = Math.max(0, Math.min(1, alpha));\n  }\n\n  save() {\n    if (!this.ctx) return;\n    this.ctx.save();\n  }\n\n  restore() {\n    if (!this.ctx) return;\n    this.ctx.restore();\n  }\n\n  measureText(text, font = '16px Arial') {\n    if (!this.ctx) return { width: 0, height: 0 };\n    \n    const previousFont = this.ctx.font;\n    this.ctx.font = font;\n    const metrics = this.ctx.measureText(text);\n    this.ctx.font = previousFont;\n    \n    return {\n      width: metrics.width,\n      height: parseInt(font) // Approximate height\n    };\n  }\n}\n\nexport default DrawingUtils;","export class CameraManager {\n  constructor(options = {}) {\n    this.options = {\n      preferredWidth: options.preferredWidth || 640,\n      preferredHeight: options.preferredHeight || 480,\n      facingMode: options.facingMode || 'user',\n      ...options\n    };\n    \n    this.stream = null;\n    this.videoElement = null;\n    this.isActive = false;\n  }\n\n  async startCamera(videoElement) {\n    if (this.isActive) {\n      console.warn('Camera is already active');\n      return this.stream;\n    }\n\n    this.videoElement = videoElement;\n\n    try {\n      // Check if getUserMedia is available\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error('getUserMedia is not supported in this browser');\n      }\n\n      // Get constraints using the updated method\n      const constraints = this.getCameraConstraints();\n\n      this.stream = await navigator.mediaDevices.getUserMedia(constraints);\n      \n      // Attach stream to video element\n      this.videoElement.srcObject = this.stream;\n      \n      // Wait for video to be ready\n      await this.waitForVideoReady();\n      \n      this.isActive = true;\n      \n      return this.stream;\n    } catch (error) {\n      this.handleCameraError(error);\n      throw error;\n    }\n  }\n\n  async waitForVideoReady() {\n    return new Promise((resolve, reject) => {\n      if (this.videoElement.readyState >= 2) {\n        resolve();\n        return;\n      }\n\n      const timeout = setTimeout(() => {\n        reject(new Error('Video loading timeout'));\n      }, 10000);\n\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        clearTimeout(timeout);\n        resolve();\n      }, { once: true });\n\n      this.videoElement.addEventListener('error', (error) => {\n        clearTimeout(timeout);\n        reject(error);\n      }, { once: true });\n    });\n  }\n\n  handleCameraError(error) {\n    let errorMessage = 'Camera access error: ';\n\n    if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n      errorMessage += 'Camera permission denied. Please allow camera access.';\n    } else if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n      errorMessage += 'No camera found on this device.';\n    } else if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n      errorMessage += 'Camera is already in use by another application.';\n    } else if (error.name === 'OverconstrainedError' || error.name === 'ConstraintNotSatisfiedError') {\n      errorMessage += 'Camera does not support the requested resolution.';\n    } else if (error.name === 'TypeError') {\n      errorMessage += 'Invalid camera constraints.';\n    } else {\n      errorMessage += error.message || 'Unknown error occurred.';\n    }\n\n    console.error(errorMessage, error);\n    throw new Error(errorMessage);\n  }\n\n  async stopCamera() {\n    if (this.stream) {\n      // Stop all tracks\n      this.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n      \n      // Clear video source\n      if (this.videoElement) {\n        this.videoElement.srcObject = null;\n      }\n      \n      this.stream = null;\n      this.isActive = false;\n    }\n  }\n\n  async switchCamera() {\n    if (!this.isActive) {\n      throw new Error('Camera is not active');\n    }\n\n    // Toggle facing mode\n    this.options.facingMode = this.options.facingMode === 'user' ? 'environment' : 'user';\n    \n    // Stop current camera\n    await this.stopCamera();\n    \n    // Start with new camera\n    await this.startCamera(this.videoElement);\n  }\n\n  async getAvailableCameras() {\n    try {\n      // First request camera permissions if not already granted\n      // This ensures we get labeled devices\n      if (!this.stream) {\n        try {\n          const tempStream = await navigator.mediaDevices.getUserMedia({ video: true });\n          tempStream.getTracks().forEach(track => track.stop());\n        } catch (e) {\n          // User denied permission or no cameras available\n          console.warn('Camera permission not granted:', e);\n        }\n      }\n\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const cameras = devices.filter(device => device.kind === 'videoinput');\n      \n      // Add friendly names if labels are empty\n      return cameras.map((camera, index) => ({\n        deviceId: camera.deviceId,\n        label: camera.label || `Camera ${index + 1}`,\n        groupId: camera.groupId\n      }));\n    } catch (error) {\n      console.error('Failed to enumerate devices:', error);\n      return [];\n    }\n  }\n\n  async selectCamera(deviceId) {\n    if (!deviceId) {\n      throw new Error('Device ID is required');\n    }\n\n    this.options.deviceId = deviceId;\n    \n    if (this.isActive) {\n      await this.stopCamera();\n      await this.startCamera(this.videoElement);\n    }\n  }\n\n  getCameraConstraints() {\n    const constraints = {\n      video: {\n        width: { ideal: this.options.preferredWidth },\n        height: { ideal: this.options.preferredHeight }\n      }\n    };\n\n    if (this.options.deviceId) {\n      constraints.video.deviceId = { exact: this.options.deviceId };\n    } else {\n      constraints.video.facingMode = this.options.facingMode;\n    }\n\n    return constraints;\n  }\n\n  getStreamInfo() {\n    if (!this.stream || !this.stream.active) {\n      return null;\n    }\n\n    const videoTrack = this.stream.getVideoTracks()[0];\n    if (!videoTrack) {\n      return null;\n    }\n\n    const settings = videoTrack.getSettings();\n    return {\n      width: settings.width,\n      height: settings.height,\n      frameRate: settings.frameRate,\n      deviceId: settings.deviceId,\n      facingMode: settings.facingMode,\n      label: videoTrack.label\n    };\n  }\n\n  isStreamActive() {\n    return this.isActive && this.stream && this.stream.active;\n  }\n\n  async takeSnapshot() {\n    if (!this.videoElement || !this.isActive) {\n      throw new Error('Camera is not active');\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = this.videoElement.videoWidth;\n    canvas.height = this.videoElement.videoHeight;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(this.videoElement, 0, 0);\n    \n    return canvas.toDataURL('image/png');\n  }\n}\n\nexport default CameraManager;","export class PerformanceMonitor {\n  constructor(options = {}) {\n    this.options = {\n      sampleSize: options.sampleSize || 60, // Keep last 60 frames for FPS calculation\n      warningThreshold: options.warningThreshold || 15, // FPS warning threshold\n      ...options\n    };\n\n    this.reset();\n  }\n\n  reset() {\n    this.frameTimes = [];\n    this.frameStartTime = 0;\n    this.lastFrameTime = 0;\n    this.totalFrames = 0;\n    this.metrics = new Map();\n    this.startTime = performance.now();\n  }\n\n  startFrame() {\n    this.frameStartTime = performance.now();\n  }\n\n  endFrame() {\n    if (this.frameStartTime === 0) return;\n\n    const frameTime = performance.now() - this.frameStartTime;\n    this.frameTimes.push(frameTime);\n    \n    // Keep only the last N samples\n    if (this.frameTimes.length > this.options.sampleSize) {\n      this.frameTimes.shift();\n    }\n    \n    this.lastFrameTime = performance.now();\n    this.totalFrames++;\n    this.frameStartTime = 0;\n  }\n\n  getCurrentFPS() {\n    if (this.frameTimes.length < 2) return 0;\n\n    const averageFrameTime = this.getAverageFrameTime();\n    if (averageFrameTime === 0) return 0;\n\n    return Math.round(1000 / averageFrameTime);\n  }\n\n  getAverageFrameTime() {\n    if (this.frameTimes.length === 0) return 0;\n\n    const sum = this.frameTimes.reduce((acc, time) => acc + time, 0);\n    return sum / this.frameTimes.length;\n  }\n\n  getMinFrameTime() {\n    if (this.frameTimes.length === 0) return 0;\n    return Math.min(...this.frameTimes);\n  }\n\n  getMaxFrameTime() {\n    if (this.frameTimes.length === 0) return 0;\n    return Math.max(...this.frameTimes);\n  }\n\n  start(label) {\n    this.metrics.set(label, {\n      startTime: performance.now(),\n      endTime: null,\n      duration: null\n    });\n  }\n\n  end(label) {\n    const metric = this.metrics.get(label);\n    if (!metric || metric.endTime !== null) {\n      console.warn(`Performance metric \"${label}\" not started or already ended`);\n      return 0;\n    }\n\n    metric.endTime = performance.now();\n    metric.duration = metric.endTime - metric.startTime;\n    \n    return metric.duration;\n  }\n\n  measure(label, fn) {\n    this.start(label);\n    try {\n      const result = fn();\n      if (result instanceof Promise) {\n        return result.finally(() => this.end(label));\n      }\n      this.end(label);\n      return result;\n    } catch (error) {\n      this.end(label);\n      throw error;\n    }\n  }\n\n  async measureAsync(label, asyncFn) {\n    this.start(label);\n    try {\n      const result = await asyncFn();\n      this.end(label);\n      return result;\n    } catch (error) {\n      this.end(label);\n      throw error;\n    }\n  }\n\n  getMetric(label) {\n    const metric = this.metrics.get(label);\n    if (!metric || metric.duration === null) {\n      return null;\n    }\n    return metric.duration;\n  }\n\n  getAllMetrics() {\n    const results = {};\n    for (const [label, metric] of this.metrics) {\n      if (metric.duration !== null) {\n        results[label] = metric.duration;\n      }\n    }\n    return results;\n  }\n\n  getSummary() {\n    const fps = this.getCurrentFPS();\n    const avgFrameTime = this.getAverageFrameTime();\n    const minFrameTime = this.getMinFrameTime();\n    const maxFrameTime = this.getMaxFrameTime();\n    const totalTime = performance.now() - this.startTime;\n    \n    return {\n      fps,\n      avgFrameTime,\n      minFrameTime,\n      maxFrameTime,\n      totalFrames: this.totalFrames,\n      totalTime,\n      averageFPS: this.totalFrames / (totalTime / 1000),\n      isPerformanceGood: fps >= this.options.warningThreshold,\n      metrics: this.getAllMetrics()\n    };\n  }\n\n  getFrameTimeDistribution() {\n    if (this.frameTimes.length === 0) return {};\n\n    const buckets = {\n      '<16ms': 0,\n      '16-33ms': 0,\n      '33-50ms': 0,\n      '50-100ms': 0,\n      '>100ms': 0\n    };\n\n    this.frameTimes.forEach(time => {\n      if (time < 16) buckets['<16ms']++;\n      else if (time < 33) buckets['16-33ms']++;\n      else if (time < 50) buckets['33-50ms']++;\n      else if (time < 100) buckets['50-100ms']++;\n      else buckets['>100ms']++;\n    });\n\n    return buckets;\n  }\n\n  getPerformanceScore() {\n    const fps = this.getCurrentFPS();\n    const avgFrameTime = this.getAverageFrameTime();\n    \n    // Score based on FPS (0-50 points)\n    let fpsScore = Math.min(50, (fps / 60) * 50);\n    \n    // Score based on frame time consistency (0-50 points)\n    const minTime = this.getMinFrameTime();\n    const maxTime = this.getMaxFrameTime();\n    const variance = maxTime - minTime;\n    let consistencyScore = Math.max(0, 50 - variance);\n    \n    return Math.round(fpsScore + consistencyScore);\n  }\n\n  logSummary() {\n    const summary = this.getSummary();\n    console.group('Performance Summary');\n    console.log(`FPS: ${summary.fps}`);\n    console.log(`Average Frame Time: ${summary.avgFrameTime.toFixed(2)}ms`);\n    console.log(`Frame Time Range: ${summary.minFrameTime.toFixed(2)}ms - ${summary.maxFrameTime.toFixed(2)}ms`);\n    console.log(`Total Frames: ${summary.totalFrames}`);\n    console.log(`Total Time: ${(summary.totalTime / 1000).toFixed(2)}s`);\n    console.log(`Performance Score: ${this.getPerformanceScore()}/100`);\n    \n    const distribution = this.getFrameTimeDistribution();\n    console.log('Frame Time Distribution:', distribution);\n    \n    if (Object.keys(summary.metrics).length > 0) {\n      console.log('Custom Metrics:', summary.metrics);\n    }\n    \n    console.groupEnd();\n  }\n}\n\n// Static instance for global performance monitoring\nPerformanceMonitor.global = new PerformanceMonitor();\n\nexport default PerformanceMonitor;","import FaceDetector from './faceDetection.js';\nimport { DrawingUtils } from './drawingUtils.js';\nimport { CameraManager } from './cameraUtils.js';\nimport { PerformanceMonitor } from './performanceMonitor.js';\nimport * as faceapi from '@vladmandic/face-api';\n\nexport class LiteModeDetector {\n  constructor(options = {}) {\n    this.options = {\n      targetFPS: options.targetFPS || 30,\n      frameSkip: options.frameSkip || 0,\n      showConfidence: options.showConfidence !== false,\n      boundingBoxColor: options.boundingBoxColor || '#00ff00',\n      boundingBoxWidth: options.boundingBoxWidth || 2,\n      confidenceThreshold: options.confidenceThreshold || 0.5,\n      ...options\n    };\n\n    this.detector = new FaceDetector({\n      detectionThreshold: this.options.confidenceThreshold\n    });\n    \n    this.drawingUtils = new DrawingUtils();\n    this.cameraManager = new CameraManager();\n    this.performanceMonitor = new PerformanceMonitor();\n    \n    this.video = null;\n    this.canvas = null;\n    this.isRunning = false;\n    this.frameCount = 0;\n    this.animationId = null;\n  }\n\n  async initialize(videoElement, canvasElement) {\n    this.video = videoElement;\n    this.canvas = canvasElement;\n    \n    // Load the face detection model\n    await this.detector.loadModel();\n    \n    // Setup camera\n    await this.cameraManager.startCamera(this.video);\n    \n    // Adjust canvas size to match video\n    this.adjustCanvasSize();\n    \n    // Initialize drawing utils with canvas\n    this.drawingUtils.setCanvas(this.canvas);\n    \n    return true;\n  }\n\n  adjustCanvasSize() {\n    if (this.video && this.canvas) {\n      this.canvas.width = this.video.videoWidth;\n      this.canvas.height = this.video.videoHeight;\n    }\n  }\n\n  start() {\n    if (this.isRunning) {\n      console.warn('Lite mode detection is already running');\n      return;\n    }\n\n    this.isRunning = true;\n    this.frameCount = 0;\n    this.performanceMonitor.reset();\n    this.detectLoop();\n  }\n\n  stop() {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n    \n    // Clear the canvas\n    this.drawingUtils.clear();\n    \n    // Log performance summary\n    const summary = this.performanceMonitor.getSummary();\n    console.log('Performance Summary:', summary);\n  }\n\n  async detectLoop() {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.performanceMonitor.startFrame();\n\n    // Skip frames if configured\n    if (this.options.frameSkip > 0 && this.frameCount % (this.options.frameSkip + 1) !== 0) {\n      this.frameCount++;\n      this.animationId = requestAnimationFrame(() => this.detectLoop());\n      return;\n    }\n\n    try {\n      // Perform face detection\n      const detections = await this.detector.detect(this.video);\n      \n      // Resize results to match display size\n      const displaySize = {\n        width: this.video.videoWidth,\n        height: this.video.videoHeight\n      };\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      \n      // Clear previous drawings\n      this.drawingUtils.clear();\n      \n      // Draw bounding boxes for each detection\n      resizedDetections.forEach(detection => {\n        const box = detection.box || detection.detection.box;\n        const score = detection.score || detection.detection.score;\n        \n        // Draw bounding box\n        this.drawingUtils.drawBoundingBox(\n          box,\n          this.options.boundingBoxColor,\n          this.options.boundingBoxWidth\n        );\n        \n        // Draw confidence score if enabled\n        if (this.options.showConfidence) {\n          const confidence = Math.round(score * 100);\n          this.drawingUtils.drawText(\n            `${confidence}%`,\n            box.x,\n            box.y - 5,\n            {\n              color: this.options.boundingBoxColor,\n              font: '14px Arial',\n              backgroundColor: 'rgba(0, 0, 0, 0.5)',\n              padding: 2\n            }\n          );\n        }\n      });\n      \n      // Update performance metrics\n      this.performanceMonitor.endFrame();\n      this.updatePerformanceDisplay();\n      \n    } catch (error) {\n      console.error('Detection error:', error);\n    }\n\n    this.frameCount++;\n    this.animationId = requestAnimationFrame(() => this.detectLoop());\n  }\n\n  updatePerformanceDisplay() {\n    const fps = this.performanceMonitor.getCurrentFPS();\n    const avgDetectionTime = this.performanceMonitor.getAverageFrameTime();\n    \n    // Draw FPS counter\n    this.drawingUtils.drawText(\n      `FPS: ${fps}`,\n      10,\n      25,\n      {\n        color: fps >= 15 ? '#00ff00' : '#ff0000',\n        font: '16px Arial',\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        padding: 5\n      }\n    );\n    \n    // Draw detection time\n    this.drawingUtils.drawText(\n      `Detection: ${avgDetectionTime.toFixed(1)}ms`,\n      10,\n      50,\n      {\n        color: '#00ff00',\n        font: '14px Arial',\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        padding: 5\n      }\n    );\n  }\n\n  setDetectionThreshold(threshold) {\n    this.options.confidenceThreshold = threshold;\n    this.detector.setDetectionThreshold(threshold);\n  }\n\n  setFrameSkip(skip) {\n    if (skip < 0) {\n      throw new Error('Frame skip must be non-negative');\n    }\n    this.options.frameSkip = skip;\n  }\n\n  setBoundingBoxStyle(color, width) {\n    if (color) this.options.boundingBoxColor = color;\n    if (width) this.options.boundingBoxWidth = width;\n  }\n\n  getPerformanceStats() {\n    return this.performanceMonitor.getSummary();\n  }\n\n  async cleanup() {\n    this.stop();\n    await this.cameraManager.stopCamera();\n  }\n}\n\nexport default LiteModeDetector;","/**\n * Advanced Landmark Drawing Utilities for Pro Mode\n * Handles 68-point facial landmarks visualization with connections\n */\n\n// Define landmark point indices for different facial regions\nconst FACIAL_REGIONS = {\n  jawline: [...Array(17).keys()], // 0-16\n  rightEyebrow: [...Array(5).keys()].map(i => i + 17), // 17-21\n  leftEyebrow: [...Array(5).keys()].map(i => i + 22), // 22-26\n  nose: [...Array(9).keys()].map(i => i + 27), // 27-35\n  rightEye: [...Array(6).keys()].map(i => i + 36), // 36-41\n  leftEye: [...Array(6).keys()].map(i => i + 42), // 42-47\n  outerMouth: [...Array(12).keys()].map(i => i + 48), // 48-59\n  innerMouth: [...Array(8).keys()].map(i => i + 60) // 60-67\n};\n\n// Define connections between landmarks\nconst LANDMARK_CONNECTIONS = [\n  // Jawline connections\n  ...FACIAL_REGIONS.jawline.slice(0, -1).map((i, idx) => [i, i + 1]),\n  \n  // Eyebrow connections\n  ...FACIAL_REGIONS.rightEyebrow.slice(0, -1).map((i, idx) => [i, i + 1]),\n  ...FACIAL_REGIONS.leftEyebrow.slice(0, -1).map((i, idx) => [i, i + 1]),\n  \n  // Nose connections\n  [27, 28], [28, 29], [29, 30], // Nose bridge\n  [30, 33], // Nose tip\n  [31, 32], [32, 33], [33, 34], [34, 35], // Nostrils\n  [31, 35], // Nostril connection\n  \n  // Eye connections (circular)\n  ...FACIAL_REGIONS.rightEye.map((i, idx) => [i, FACIAL_REGIONS.rightEye[(idx + 1) % 6]]),\n  ...FACIAL_REGIONS.leftEye.map((i, idx) => [i, FACIAL_REGIONS.leftEye[(idx + 1) % 6]]),\n  \n  // Mouth connections\n  ...FACIAL_REGIONS.outerMouth.map((i, idx) => [i, FACIAL_REGIONS.outerMouth[(idx + 1) % 12]]),\n  ...FACIAL_REGIONS.innerMouth.map((i, idx) => [i, FACIAL_REGIONS.innerMouth[(idx + 1) % 8]])\n];\n\nexport function drawLandmarks(ctx, landmarks, style) {\n  const positions = landmarks.positions;\n  \n  // Draw landmark points\n  positions.forEach((point, index) => {\n    const region = getRegionForPoint(index);\n    const color = style.regionColors[region] || style.landmarkColor;\n    \n    // Draw point with glow effect\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, style.landmarkSize + 1, 0, 2 * Math.PI);\n    ctx.fillStyle = color + '40'; // Semi-transparent glow\n    ctx.fill();\n    \n    ctx.beginPath();\n    ctx.arc(point.x, point.y, style.landmarkSize, 0, 2 * Math.PI);\n    ctx.fillStyle = color;\n    ctx.fill();\n  });\n  \n  // Draw connections between landmarks\n  ctx.strokeStyle = style.connectionColor + '80'; // Semi-transparent connections\n  ctx.lineWidth = 1;\n  \n  LANDMARK_CONNECTIONS.forEach(([start, end]) => {\n    if (positions[start] && positions[end]) {\n      ctx.beginPath();\n      ctx.moveTo(positions[start].x, positions[start].y);\n      ctx.lineTo(positions[end].x, positions[end].y);\n      ctx.stroke();\n    }\n  });\n}\n\nexport function drawFaceContours(ctx, landmarks, style) {\n  const positions = landmarks.positions;\n  \n  // Draw smooth contours for major facial features\n  ctx.strokeStyle = style.contourColor;\n  ctx.lineWidth = 2;\n  ctx.lineCap = 'round';\n  ctx.lineJoin = 'round';\n  \n  // Draw jawline contour\n  drawSmoothCurve(ctx, FACIAL_REGIONS.jawline.map(i => positions[i]));\n  \n  // Draw eyebrow contours\n  drawSmoothCurve(ctx, FACIAL_REGIONS.rightEyebrow.map(i => positions[i]));\n  drawSmoothCurve(ctx, FACIAL_REGIONS.leftEyebrow.map(i => positions[i]));\n  \n  // Draw eye contours\n  drawSmoothCurve(ctx, FACIAL_REGIONS.rightEye.map(i => positions[i]), true);\n  drawSmoothCurve(ctx, FACIAL_REGIONS.leftEye.map(i => positions[i]), true);\n  \n  // Draw mouth contours\n  drawSmoothCurve(ctx, FACIAL_REGIONS.outerMouth.map(i => positions[i]), true);\n  drawSmoothCurve(ctx, FACIAL_REGIONS.innerMouth.map(i => positions[i]), true);\n}\n\nexport function drawExpressions(ctx, expressions, box) {\n  const sortedExpressions = Object.entries(expressions)\n    .filter(([_, value]) => value > 0.1) // Only show expressions above 10% confidence\n    .sort(([_, a], [__, b]) => b - a)\n    .slice(0, 3); // Show top 3 expressions\n  \n  // Position expressions below the face box\n  let yOffset = box.y + box.height + 20;\n  \n  ctx.font = '14px Arial';\n  ctx.textAlign = 'left';\n  \n  sortedExpressions.forEach(([expression, value]) => {\n    const percentage = Math.round(value * 100);\n    const text = `${expression}: ${percentage}%`;\n    \n    // Draw background for better readability\n    const textWidth = ctx.measureText(text).width;\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    ctx.fillRect(box.x, yOffset - 14, textWidth + 10, 18);\n    \n    // Draw expression text\n    ctx.fillStyle = getExpressionColor(expression, value);\n    ctx.fillText(text, box.x + 5, yOffset);\n    \n    yOffset += 20;\n  });\n}\n\nexport function drawAgeGender(ctx, age, gender, box) {\n  const ageText = `Age: ${Math.round(age)}`;\n  const genderText = `Gender: ${gender} (${Math.round(gender === 'male' ? \n    age * 0.95 : age * 1.05)}% confidence)`;\n  \n  // Position above the face box\n  const yPosition = box.y - 10;\n  \n  ctx.font = '14px Arial';\n  ctx.textAlign = 'left';\n  \n  // Draw background\n  const maxWidth = Math.max(\n    ctx.measureText(ageText).width,\n    ctx.measureText(genderText).width\n  );\n  \n  ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n  ctx.fillRect(box.x, yPosition - 35, maxWidth + 10, 40);\n  \n  // Draw text\n  ctx.fillStyle = '#ffffff';\n  ctx.fillText(ageText, box.x + 5, yPosition - 20);\n  ctx.fillText(genderText, box.x + 5, yPosition - 5);\n}\n\n// Helper function to draw smooth curves through points\nfunction drawSmoothCurve(ctx, points, closed = false) {\n  if (points.length < 2) return;\n  \n  ctx.beginPath();\n  ctx.moveTo(points[0].x, points[0].y);\n  \n  // Use quadratic curves for smoother lines\n  for (let i = 1; i < points.length - 1; i++) {\n    const xc = (points[i].x + points[i + 1].x) / 2;\n    const yc = (points[i].y + points[i + 1].y) / 2;\n    ctx.quadraticCurveTo(points[i].x, points[i].y, xc, yc);\n  }\n  \n  // Last point\n  if (closed && points.length > 2) {\n    const xc = (points[points.length - 1].x + points[0].x) / 2;\n    const yc = (points[points.length - 1].y + points[0].y) / 2;\n    ctx.quadraticCurveTo(points[points.length - 1].x, points[points.length - 1].y, xc, yc);\n    ctx.quadraticCurveTo(xc, yc, points[0].x, points[0].y);\n  } else {\n    ctx.lineTo(points[points.length - 1].x, points[points.length - 1].y);\n  }\n  \n  ctx.stroke();\n}\n\n// Helper function to determine which facial region a landmark belongs to\nfunction getRegionForPoint(index) {\n  if (FACIAL_REGIONS.rightEye.includes(index)) return 'rightEye';\n  if (FACIAL_REGIONS.leftEye.includes(index)) return 'leftEye';\n  if (FACIAL_REGIONS.nose.includes(index)) return 'nose';\n  if (FACIAL_REGIONS.outerMouth.includes(index) || \n      FACIAL_REGIONS.innerMouth.includes(index)) return 'mouth';\n  if (FACIAL_REGIONS.jawline.includes(index)) return 'jawline';\n  return 'default';\n}\n\n// Helper function to get color based on expression\nfunction getExpressionColor(expression, value) {\n  const colors = {\n    happy: '#00ff00',\n    sad: '#0000ff',\n    angry: '#ff0000',\n    surprised: '#ffff00',\n    disgusted: '#ff00ff',\n    fearful: '#ff8800',\n    neutral: '#ffffff'\n  };\n  \n  return colors[expression] || '#ffffff';\n}\n\n// Export additional utilities for landmark manipulation\nexport function animateLandmarks(currentLandmarks, targetLandmarks, progress) {\n  if (!currentLandmarks || !targetLandmarks) return currentLandmarks;\n  \n  const positions = currentLandmarks.positions.map((current, i) => {\n    const target = targetLandmarks.positions[i];\n    return {\n      x: current.x + (target.x - current.x) * progress,\n      y: current.y + (target.y - current.y) * progress\n    };\n  });\n  \n  return { positions };\n}\n\nexport function getLandmarkRegions() {\n  return FACIAL_REGIONS;\n}\n\nexport function getLandmarkConnections() {\n  return LANDMARK_CONNECTIONS;\n}","/**\n * Pro Mode Implementation for Face Detection\n * Advanced features including landmarks, expressions, age/gender estimation\n */\n\nimport * as faceapi from '@vladmandic/face-api';\nimport { drawLandmarks, drawFaceContours, drawExpressions, drawAgeGender } from './landmarkDrawing';\nimport { appConfig } from './config.js';\n\nexport class ProMode {\n  constructor() {\n    this.modelsLoaded = false;\n    this.modelPromise = null;\n    this.detectionOptions = null;\n    this.features = {\n      landmarks: true,\n      expressions: true,\n      ageGender: true,\n      faceRecognition: true,\n      contours: true,\n      regions: true\n    };\n    this.visualizationStyle = {\n      landmarkSize: 2,\n      landmarkColor: '#00ff00',\n      connectionColor: '#00ffff',\n      contourColor: '#ff00ff',\n      regionColors: {\n        leftEye: '#ff0000',\n        rightEye: '#ff0000',\n        nose: '#00ff00',\n        mouth: '#0000ff',\n        jawline: '#ffff00'\n      }\n    };\n  }\n\n  async loadModels() {\n    if (this.modelsLoaded) return;\n    if (this.modelPromise) return this.modelPromise;\n\n    this.modelPromise = (async () => {\n      try {\n        const MODEL_URL = appConfig.getModelUrl();\n        console.log('Pro mode loading models from:', MODEL_URL);\n        \n        // Load all required models for Pro mode\n        await Promise.all([\n          faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n          faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\n          faceapi.nets.ageGenderNet.loadFromUri(MODEL_URL),\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\n        ]);\n\n        // Configure detection options for higher accuracy\n        this.detectionOptions = new faceapi.SsdMobilenetv1Options({\n          minConfidence: 0.5,\n          maxResults: 10\n        });\n\n        this.modelsLoaded = true;\n        console.log('Pro mode models loaded successfully');\n      } catch (error) {\n        console.error('Error loading Pro mode models:', error);\n        throw error;\n      }\n    })();\n\n    return this.modelPromise;\n  }\n\n  async detectFaces(video, canvas) {\n    if (!this.modelsLoaded) {\n      await this.loadModels();\n    }\n\n    try {\n      // Perform full face detection with all features\n      const detections = await faceapi\n        .detectAllFaces(video, this.detectionOptions)\n        .withFaceLandmarks()\n        .withFaceExpressions()\n        .withAgeAndGender();\n\n      return detections;\n    } catch (error) {\n      console.error('Pro mode detection error:', error);\n      return [];\n    }\n  }\n\n  drawDetections(canvas, detections, video) {\n    const ctx = canvas.getContext('2d');\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw video frame\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    detections.forEach(detection => {\n      const { detection: faceDetection, landmarks, expressions, age, gender } = detection;\n      \n      // Draw bounding box\n      this.drawBoundingBox(ctx, faceDetection.box);\n      \n      // Draw facial landmarks with connections\n      if (this.features.landmarks && landmarks) {\n        drawLandmarks(ctx, landmarks, this.visualizationStyle);\n      }\n      \n      // Draw face contours\n      if (this.features.contours && landmarks) {\n        drawFaceContours(ctx, landmarks, this.visualizationStyle);\n      }\n      \n      // Draw expressions\n      if (this.features.expressions && expressions) {\n        drawExpressions(ctx, expressions, faceDetection.box);\n      }\n      \n      // Draw age and gender\n      if (this.features.ageGender && age !== undefined && gender) {\n        drawAgeGender(ctx, age, gender, faceDetection.box);\n      }\n    });\n\n    return detections;\n  }\n\n  drawBoundingBox(ctx, box) {\n    const { x, y, width, height } = box;\n    \n    ctx.strokeStyle = '#00ff00';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(x, y, width, height);\n    \n    // Draw corner accents\n    const cornerLength = 20;\n    ctx.lineWidth = 3;\n    \n    // Top-left corner\n    ctx.beginPath();\n    ctx.moveTo(x, y + cornerLength);\n    ctx.lineTo(x, y);\n    ctx.lineTo(x + cornerLength, y);\n    ctx.stroke();\n    \n    // Top-right corner\n    ctx.beginPath();\n    ctx.moveTo(x + width - cornerLength, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + cornerLength);\n    ctx.stroke();\n    \n    // Bottom-left corner\n    ctx.beginPath();\n    ctx.moveTo(x, y + height - cornerLength);\n    ctx.lineTo(x, y + height);\n    ctx.lineTo(x + cornerLength, y + height);\n    ctx.stroke();\n    \n    // Bottom-right corner\n    ctx.beginPath();\n    ctx.moveTo(x + width - cornerLength, y + height);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x + width, y + height - cornerLength);\n    ctx.stroke();\n  }\n\n  toggleFeature(feature) {\n    if (this.features.hasOwnProperty(feature)) {\n      this.features[feature] = !this.features[feature];\n    }\n  }\n\n  updateVisualizationStyle(style) {\n    this.visualizationStyle = { ...this.visualizationStyle, ...style };\n  }\n\n  exportDetectionData(detections) {\n    return detections.map(detection => ({\n      boundingBox: detection.detection.box,\n      landmarks: detection.landmarks ? detection.landmarks.positions.map(p => ({ x: p.x, y: p.y })) : null,\n      expressions: detection.expressions || null,\n      age: detection.age || null,\n      gender: detection.gender || null,\n      confidence: detection.detection.score\n    }));\n  }\n\n  getPerformanceTarget() {\n    return {\n      targetFPS: 20,\n      mode: 'pro',\n      features: Object.keys(this.features).filter(f => this.features[f])\n    };\n  }\n}\n\nexport default ProMode;","/**\n * WASM Backend Module\n * Handles TensorFlow.js WASM backend initialization and configuration\n */\n\nimport * as tf from '@tensorflow/tfjs';\nimport '@tensorflow/tfjs-backend-wasm';\nimport { setWasmPaths, setThreadsCount } from '@tensorflow/tfjs-backend-wasm';\n\n/**\n * Configure WASM paths for model loading\n */\nexport function configureWASMPaths() {\n  // Use CDN for WASM files or local path if available\n  const wasmPath = 'https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@latest/dist/';\n  setWasmPaths(wasmPath);\n}\n\n/**\n * Detect WASM features available in the browser\n */\nexport async function detectWASMFeatures() {\n  const features = {\n    simdSupport: false,\n    threadsSupport: false,\n    backendName: 'unknown'\n  };\n\n  try {\n    // Check for SIMD support\n    if (typeof WebAssembly !== 'undefined' && WebAssembly.validate) {\n      // SIMD detection using WebAssembly.validate\n      const simdTest = new Uint8Array([\n        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00,\n        0x01, 0x05, 0x01, 0x60, 0x00, 0x01, 0x7b, 0x03,\n        0x02, 0x01, 0x00, 0x0a, 0x0a, 0x01, 0x08, 0x00,\n        0x41, 0x00, 0xfd, 0x0f, 0x0b\n      ]);\n      features.simdSupport = WebAssembly.validate(simdTest);\n    }\n\n    // Check for threads support (SharedArrayBuffer)\n    features.threadsSupport = typeof SharedArrayBuffer !== 'undefined';\n\n    // Get current backend\n    if (tf.getBackend) {\n      features.backendName = tf.getBackend();\n    }\n\n    // Check TensorFlow.js environment features\n    const tfFeatures = await tf.env().getAsync('WEBGL_PACK');\n    features.webglPack = tfFeatures;\n\n  } catch (error) {\n    console.warn('Error detecting WASM features:', error);\n  }\n\n  return features;\n}\n\n/**\n * Configure optimal thread count based on hardware\n */\nexport async function configureWASMThreads() {\n  const config = {\n    threads: 1,\n    multithreading: false\n  };\n\n  try {\n    // Check if SharedArrayBuffer is available\n    if (typeof SharedArrayBuffer !== 'undefined') {\n      // Get number of logical processors\n      const numCores = navigator.hardwareConcurrency || 4;\n      \n      // Use half the cores for optimal performance (leave room for main thread)\n      const optimalThreads = Math.max(1, Math.floor(numCores / 2));\n      \n      setThreadsCount(optimalThreads);\n      config.threads = optimalThreads;\n      config.multithreading = true;\n      \n      console.log(`WASM threads configured: ${optimalThreads} threads`);\n    } else {\n      console.log('SharedArrayBuffer not available, using single-threaded WASM');\n    }\n  } catch (error) {\n    console.warn('Error configuring WASM threads:', error);\n  }\n\n  return config;\n}\n\n/**\n * Initialize WASM backend with optimal configuration\n */\nexport async function initializeWASMBackend() {\n  console.group('🚀 WASM Backend Initialization');\n  console.log('Starting WebAssembly backend setup...');\n  \n  const result = {\n    backend: 'wasm',\n    fallback: false,\n    features: {},\n    error: null\n  };\n\n  try {\n    // Log WebAssembly availability\n    console.log('WebAssembly available:', typeof WebAssembly !== 'undefined');\n    \n    // Configure WASM paths\n    console.log('Configuring WASM paths...');\n    configureWASMPaths();\n\n    // Configure threads\n    console.log('Configuring WASM threads...');\n    const threadConfig = await configureWASMThreads();\n    console.log('Thread configuration:', threadConfig);\n\n    // Set WASM as the backend\n    console.log('Setting WASM backend...');\n    await tf.setBackend('wasm');\n    \n    // Wait for backend to be ready\n    await tf.ready();\n\n    // Verify backend is set correctly\n    const currentBackend = tf.getBackend();\n    console.log('✅ Current backend:', currentBackend);\n    \n    if (currentBackend !== 'wasm') {\n      throw new Error(`Backend mismatch: expected 'wasm', got '${currentBackend}'`);\n    }\n\n    // Detect features\n    result.features = await detectWASMFeatures();\n    console.log('WASM Features detected:', result.features);\n\n    // Performance test\n    console.log('Running WASM performance test...');\n    const testTensor = tf.randomNormal([100, 100]);\n    const startTime = performance.now();\n    const resultTensor = tf.matMul(testTensor, testTensor);\n    await resultTensor.data();\n    const endTime = performance.now();\n    const testTime = endTime - startTime;\n    console.log(`WASM MatMul (100x100) completed in: ${testTime.toFixed(2)}ms`);\n    testTensor.dispose();\n    resultTensor.dispose();\n\n    console.log('✅ WASM backend initialized successfully!');\n    console.log('WASM is ACTIVE - Enjoy 8-20X faster inference! 🎯');\n\n  } catch (error) {\n    console.error('❌ Failed to initialize WASM backend:', error);\n    result.error = error.message;\n\n    // Fallback to WebGL\n    try {\n      await tf.setBackend('webgl');\n      await tf.ready();\n      result.backend = 'webgl';\n      result.fallback = true;\n      console.log('Fallback to WebGL backend successful');\n    } catch (fallbackError) {\n      console.error('WebGL fallback also failed:', fallbackError);\n      // Final fallback to CPU\n      await tf.setBackend('cpu');\n      await tf.ready();\n      result.backend = 'cpu';\n      result.fallback = true;\n    }\n  }\n\n  console.groupEnd();\n  return result;\n}\n\n/**\n * Get backend performance characteristics\n */\nexport function getBackendPerformance() {\n  const backend = tf.getBackend();\n  const memory = tf.memory();\n\n  return {\n    backend,\n    memory: {\n      numTensors: memory.numTensors,\n      numDataBuffers: memory.numDataBuffers,\n      numBytes: memory.numBytes,\n      unreliable: memory.unreliable\n    },\n    features: {\n      simd: tf.env().getBool('WASM_HAS_SIMD_SUPPORT'),\n      threads: tf.env().getBool('WASM_HAS_MULTITHREAD_SUPPORT')\n    }\n  };\n}\n\n/**\n * Handle WASM-specific errors\n */\nexport async function handleWASMError(error) {\n  const errorInfo = {\n    message: error.message,\n    fallback: 'webgl',\n    recommendation: ''\n  };\n\n  if (error.message.includes('SharedArrayBuffer')) {\n    errorInfo.recommendation = 'Enable CORS headers: Cross-Origin-Embedder-Policy and Cross-Origin-Opener-Policy';\n  } else if (error.message.includes('SIMD')) {\n    errorInfo.recommendation = 'Browser does not support WASM SIMD. Performance may be reduced.';\n  } else if (error.message.includes('WebAssembly')) {\n    errorInfo.recommendation = 'WebAssembly not supported. Please use a modern browser.';\n    errorInfo.fallback = 'cpu';\n  }\n\n  return errorInfo;\n}\n\n/**\n * Warm up the backend with a small operation\n */\nexport async function warmupBackend() {\n  const warmupData = tf.randomNormal([1, 224, 224, 3]);\n  const result = tf.conv2d(\n    warmupData,\n    tf.randomNormal([3, 3, 3, 16]),\n    1,\n    'same'\n  );\n  \n  // Clean up\n  warmupData.dispose();\n  result.dispose();\n  \n  console.log('Backend warmed up');\n}\n\n/**\n * Monitor backend performance during runtime\n */\nexport class BackendMonitor {\n  constructor() {\n    this.metrics = {\n      inferenceCount: 0,\n      totalInferenceTime: 0,\n      memorySnapshots: []\n    };\n  }\n\n  startInference() {\n    return performance.now();\n  }\n\n  endInference(startTime) {\n    const duration = performance.now() - startTime;\n    this.metrics.inferenceCount++;\n    this.metrics.totalInferenceTime += duration;\n    \n    // Take memory snapshot every 10 inferences\n    if (this.metrics.inferenceCount % 10 === 0) {\n      this.metrics.memorySnapshots.push({\n        timestamp: Date.now(),\n        memory: tf.memory()\n      });\n    }\n  }\n\n  getAverageInferenceTime() {\n    if (this.metrics.inferenceCount === 0) return 0;\n    return this.metrics.totalInferenceTime / this.metrics.inferenceCount;\n  }\n\n  getReport() {\n    return {\n      backend: tf.getBackend(),\n      inferenceCount: this.metrics.inferenceCount,\n      averageInferenceTime: this.getAverageInferenceTime(),\n      currentMemory: tf.memory(),\n      memoryTrend: this.metrics.memorySnapshots\n    };\n  }\n\n  reset() {\n    this.metrics = {\n      inferenceCount: 0,\n      totalInferenceTime: 0,\n      memorySnapshots: []\n    };\n  }\n}\n\nexport default {\n  initializeWASMBackend,\n  detectWASMFeatures,\n  configureWASMThreads,\n  getBackendPerformance,\n  handleWASMError,\n  warmupBackend,\n  BackendMonitor\n};","/**\n * Face Detection App with WASM Support\n * Uses @vladmandic/face-api for TensorFlow.js 2.x compatibility\n */\n\n// Use @vladmandic/face-api instead of face-api.js for WASM support\nimport * as faceapi from '@vladmandic/face-api';\nimport './styles.css';\nimport { LiteModeDetector } from './liteMode.js';\nimport { ProMode } from './proMode.js';\nimport { CameraManager } from './cameraUtils.js';\nimport { DrawingUtils } from './drawingUtils.js';\nimport { PerformanceMonitor } from './performanceMonitor.js';\nimport { appConfig } from './config.js';\nimport { initializeWASMBackend, getBackendPerformance, BackendMonitor } from './wasmBackend.js';\n\nexport class FaceDetectionApp {\n  constructor(options = {}) {\n    this.video = null;\n    this.canvas = null;\n    this.isModelLoaded = false;\n    this.isVideoReady = false;\n    this.detectionInterval = null;\n    this.currentMode = 'full';\n    this.liteModeDetector = null;\n    this.proMode = null;\n    this.performanceMonitor = new PerformanceMonitor();\n    this.cameraManager = new CameraManager();\n    this.availableCameras = [];\n    this.currentCameraId = null;\n    \n    // WASM configuration\n    this.config = {\n      preferredBackend: options.preferredBackend || 'wasm',\n      enableSIMD: options.enableSIMD !== false,\n      enableThreads: options.enableThreads !== false\n    };\n    \n    this.backendType = null;\n    this.backendMonitor = new BackendMonitor();\n  }\n\n  async init() {\n    try {\n      // Initialize WASM backend first\n      await this.initializeBackend();\n      \n      // Then proceed with normal initialization\n      await this.loadModels();\n      this.setupUI();\n      await this.setupCamera();\n      \n      // Additional initialization for lite mode\n      if (this.currentMode === 'lite') {\n        this.liteModeDetector = new LiteModeDetector({\n          targetFPS: 30,\n          frameSkip: 0,\n          showConfidence: true,\n          boundingBoxColor: '#00ff00',\n          confidenceThreshold: 0.5\n        });\n        \n        this.liteModeDetector.video = this.video;\n        this.liteModeDetector.canvas = this.canvas;\n        this.liteModeDetector.drawingUtils.setCanvas(this.canvas);\n        \n        await this.liteModeDetector.detector.loadModel();\n      } else if (this.currentMode === 'pro') {\n        this.proMode = new ProMode();\n        await this.proMode.loadModels();\n      }\n      \n      this.startDetection();\n    } catch (error) {\n      console.error('Failed to initialize app:', error);\n      this.showError('Failed to initialize the application. Please check your camera permissions.');\n    }\n  }\n\n  async initializeBackend() {\n    console.log('Initializing backend with preference:', this.config.preferredBackend);\n    \n    // Initialize face-api environment\n    await faceapi.env.monkeyPatch({\n      Canvas: HTMLCanvasElement,\n      Image: HTMLImageElement,\n      ImageData: ImageData,\n      Video: HTMLVideoElement,\n      createCanvasElement: () => document.createElement('canvas'),\n      createImageElement: () => document.createElement('img')\n    });\n\n    // Initialize WASM backend if preferred\n    if (this.config.preferredBackend === 'wasm') {\n      const backendResult = await initializeWASMBackend();\n      this.backendType = backendResult.backend;\n      \n      if (backendResult.fallback) {\n        console.warn('WASM initialization failed, using fallback:', this.backendType);\n      } else {\n        console.log('WASM backend initialized successfully');\n      }\n      \n      // Update UI with backend info\n      this.updateBackendDisplay();\n    } else {\n      this.backendType = this.config.preferredBackend;\n      console.log('Using backend:', this.backendType);\n    }\n  }\n\n  async loadModels() {\n    const MODEL_URL = appConfig.getModelUrl();\n    \n    try {\n      console.log('Loading face detection models from:', MODEL_URL);\n      console.log('App configuration:', appConfig.debug());\n      console.log('Using backend:', this.backendType);\n      \n      // Load models with progress tracking\n      const modelPromises = [\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.ageGenderNet.loadFromUri(MODEL_URL)\n      ];\n      \n      await Promise.all(modelPromises);\n      \n      this.isModelLoaded = true;\n      console.log('Face detection models loaded successfully');\n      \n      // Log backend performance after model loading\n      const perfInfo = getBackendPerformance();\n      console.log('Backend performance:', perfInfo);\n    } catch (error) {\n      console.error('Failed to load models:', error);\n      throw new Error('Failed to load face detection models: ' + error.message);\n    }\n  }\n\n  setupUI() {\n    const app = document.getElementById('app');\n    app.innerHTML = `\n      <div class=\"container\">\n        <h1>Face Detection App</h1>\n        <div class=\"backend-info\" id=\"backend-info\"></div>\n        <div class=\"video-container\">\n          <video id=\"video\" autoplay muted></video>\n          <canvas id=\"overlay\"></canvas>\n        </div>\n        <div class=\"controls\">\n          <div class=\"mode-selector\">\n            <label>\n              <input type=\"radio\" name=\"mode\" value=\"lite\" ${this.currentMode === 'lite' ? 'checked' : ''}>\n              Lite Mode (Bounding Boxes)\n            </label>\n            <label>\n              <input type=\"radio\" name=\"mode\" value=\"pro\" ${this.currentMode === 'pro' ? 'checked' : ''}>\n              Pro Mode (Advanced Features)\n            </label>\n            <label>\n              <input type=\"radio\" name=\"mode\" value=\"full\" ${this.currentMode === 'full' ? 'checked' : ''}>\n              Full Mode (All Features)\n            </label>\n          </div>\n          <div id=\"pro-controls\" class=\"pro-controls\" style=\"display: ${this.currentMode === 'pro' ? 'block' : 'none'};\">\n            <h3>Pro Mode Features</h3>\n            <label><input type=\"checkbox\" id=\"landmarks\" checked> 68-point Landmarks</label>\n            <label><input type=\"checkbox\" id=\"expressions\" checked> Facial Expressions</label>\n            <label><input type=\"checkbox\" id=\"ageGender\" checked> Age & Gender</label>\n            <label><input type=\"checkbox\" id=\"contours\" checked> Face Contours</label>\n            <label><input type=\"checkbox\" id=\"regions\" checked> Region Highlighting</label>\n          </div>\n          <button id=\"startBtn\" class=\"btn btn-primary\">Start Detection</button>\n          <button id=\"stopBtn\" class=\"btn btn-secondary\" disabled>Stop Detection</button>\n          <div id=\"camera-selector\" class=\"camera-selector\" style=\"display: none;\">\n            <label for=\"cameraSelect\">Camera:</label>\n            <select id=\"cameraSelect\">\n              <option value=\"\">Loading cameras...</option>\n            </select>\n          </div>\n          <div class=\"threshold-control\">\n            <label for=\"threshold\">Detection Threshold: <span id=\"thresholdValue\">0.5</span></label>\n            <input type=\"range\" id=\"threshold\" min=\"0.1\" max=\"0.9\" step=\"0.1\" value=\"0.5\">\n          </div>\n          <div class=\"backend-selector\">\n            <label for=\"backendSelect\">Backend:</label>\n            <select id=\"backendSelect\">\n              <option value=\"wasm\" ${this.backendType === 'wasm' ? 'selected' : ''}>WASM</option>\n              <option value=\"webgl\" ${this.backendType === 'webgl' ? 'selected' : ''}>WebGL</option>\n              <option value=\"cpu\" ${this.backendType === 'cpu' ? 'selected' : ''}>CPU</option>\n            </select>\n          </div>\n        </div>\n        <div id=\"stats\" class=\"stats\"></div>\n      </div>\n    `;\n\n    this.video = document.getElementById('video');\n    this.canvas = document.getElementById('overlay');\n    \n    // Event listeners\n    document.getElementById('startBtn').onclick = () => this.startDetection();\n    document.getElementById('stopBtn').onclick = () => this.stopDetection();\n    \n    // Mode switching\n    document.querySelectorAll('input[name=\"mode\"]').forEach(radio => {\n      radio.addEventListener('change', (e) => {\n        this.switchMode(e.target.value);\n        document.getElementById('pro-controls').style.display = \n          e.target.value === 'pro' ? 'block' : 'none';\n      });\n    });\n    \n    // Pro mode feature toggles\n    if (this.currentMode === 'pro') {\n      this.setupProModeControls();\n    }\n    \n    // Threshold control\n    const thresholdSlider = document.getElementById('threshold');\n    thresholdSlider.addEventListener('input', (e) => {\n      const value = parseFloat(e.target.value);\n      document.getElementById('thresholdValue').textContent = value.toFixed(1);\n      this.updateThreshold(value);\n    });\n    \n    // Camera selector\n    const cameraSelect = document.getElementById('cameraSelect');\n    cameraSelect.addEventListener('change', async (e) => {\n      if (e.target.value) {\n        await this.switchCamera(e.target.value);\n      }\n    });\n    \n    // Backend selector\n    const backendSelect = document.getElementById('backendSelect');\n    backendSelect.addEventListener('change', async (e) => {\n      await this.switchBackend(e.target.value);\n    });\n    \n    // Load available cameras\n    this.loadCameraList();\n    \n    // Update backend display\n    this.updateBackendDisplay();\n  }\n\n  async setupCamera() {\n    try {\n      if (!this.video) {\n        throw new Error('Video element not found');\n      }\n      \n      await this.cameraManager.startCamera(this.video);\n      \n      const streamInfo = this.cameraManager.getStreamInfo();\n      if (streamInfo && streamInfo.deviceId) {\n        this.currentCameraId = streamInfo.deviceId;\n      }\n      \n      this.isVideoReady = true;\n      this.adjustCanvas();\n      \n      await this.loadCameraList();\n      \n    } catch (error) {\n      throw new Error('Camera access denied or not available: ' + error.message);\n    }\n  }\n\n  adjustCanvas() {\n    this.canvas.width = this.video.videoWidth;\n    this.canvas.height = this.video.videoHeight;\n  }\n\n  setupProModeControls() {\n    const features = ['landmarks', 'expressions', 'ageGender', 'contours', 'regions'];\n    features.forEach(feature => {\n      const checkbox = document.getElementById(feature);\n      if (checkbox) {\n        checkbox.addEventListener('change', (e) => {\n          if (this.proMode) {\n            this.proMode.toggleFeature(feature);\n          }\n        });\n      }\n    });\n  }\n\n  async startDetection() {\n    // Track inference time with backend monitor\n    const startTime = this.backendMonitor.startInference();\n    \n    if (this.currentMode === 'lite') {\n      if (!this.liteModeDetector) {\n        console.error('Lite mode detector not initialized');\n        return;\n      }\n      document.getElementById('startBtn').disabled = true;\n      document.getElementById('stopBtn').disabled = false;\n      this.liteModeDetector.start();\n    } else if (this.currentMode === 'pro') {\n      if (!this.proMode || !this.isVideoReady) {\n        console.error('Pro mode or video not ready');\n        return;\n      }\n\n      document.getElementById('startBtn').disabled = true;\n      document.getElementById('stopBtn').disabled = false;\n\n      this.performanceMonitor.start();\n\n      this.detectionInterval = setInterval(async () => {\n        await this.detectFacesPro();\n      }, 50); // 20 FPS target for pro mode\n    } else {\n      if (!this.isModelLoaded || !this.isVideoReady) {\n        console.error('Models or video not ready');\n        return;\n      }\n\n      document.getElementById('startBtn').disabled = true;\n      document.getElementById('stopBtn').disabled = false;\n\n      this.detectionInterval = setInterval(async () => {\n        await this.detectFaces();\n      }, 100);\n    }\n    \n    // Record inference completion\n    this.backendMonitor.endInference(startTime);\n  }\n\n  stopDetection() {\n    if (this.currentMode === 'lite' && this.liteModeDetector) {\n      this.liteModeDetector.stop();\n    } else if (this.detectionInterval) {\n      clearInterval(this.detectionInterval);\n      this.detectionInterval = null;\n      const ctx = this.canvas.getContext('2d');\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      \n      if (this.currentMode === 'pro') {\n        this.performanceMonitor.stop();\n      }\n    }\n\n    document.getElementById('startBtn').disabled = false;\n    document.getElementById('stopBtn').disabled = true;\n  }\n\n  async detectFaces() {\n    const startTime = this.backendMonitor.startInference();\n    \n    const detections = await faceapi.detectAllFaces(\n      this.video,\n      new faceapi.TinyFaceDetectorOptions()\n    )\n    .withFaceLandmarks()\n    .withFaceExpressions()\n    .withAgeAndGender();\n\n    const displaySize = {\n      width: this.video.videoWidth,\n      height: this.video.videoHeight\n    };\n\n    const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n    const ctx = this.canvas.getContext('2d');\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Draw detections\n    faceapi.draw.drawDetections(this.canvas, resizedDetections);\n    faceapi.draw.drawFaceLandmarks(this.canvas, resizedDetections);\n    faceapi.draw.drawFaceExpressions(this.canvas, resizedDetections);\n\n    // Draw age and gender\n    resizedDetections.forEach(detection => {\n      const { age, gender, genderProbability } = detection;\n      const { x, y, width, height } = detection.detection.box;\n      \n      ctx.font = '18px Arial';\n      ctx.fillStyle = '#00ff00';\n      ctx.fillText(\n        `${Math.round(age)} years, ${gender} (${Math.round(genderProbability * 100)}%)`,\n        x,\n        y - 10\n      );\n    });\n\n    this.updateStats(detections.length);\n    this.backendMonitor.endInference(startTime);\n  }\n\n  async detectFacesPro() {\n    if (!this.proMode) return;\n\n    const startTime = performance.now();\n    const inferenceStart = this.backendMonitor.startInference();\n\n    try {\n      const detections = await this.proMode.detectFaces(this.video, this.canvas);\n      this.proMode.drawDetections(this.canvas, detections, this.video);\n      \n      const frameTime = performance.now() - startTime;\n      this.performanceMonitor.recordFrame(frameTime, detections.length);\n      \n      this.updateProStats(detections);\n      this.backendMonitor.endInference(inferenceStart);\n    } catch (error) {\n      console.error('Pro mode detection error:', error);\n    }\n  }\n\n  updateStats(faceCount) {\n    const stats = document.getElementById('stats');\n    const backendReport = this.backendMonitor.getReport();\n    \n    stats.innerHTML = `\n      <p>Faces detected: <strong>${faceCount}</strong></p>\n      <p>Model: TinyFaceDetector</p>\n      <p>Backend: <strong>${this.backendType}</strong></p>\n      <p>Features: Landmarks, Expressions, Age & Gender</p>\n      <p>Avg Inference: <strong>${backendReport.averageInferenceTime.toFixed(2)}ms</strong></p>\n      <p>Memory: <strong>${(backendReport.currentMemory.numBytes / 1024 / 1024).toFixed(2)}MB</strong></p>\n    `;\n  }\n\n  updateProStats(detections) {\n    const stats = document.getElementById('stats');\n    const perfData = this.performanceMonitor.getMetrics();\n    const backendReport = this.backendMonitor.getReport();\n    \n    let expressionsSummary = '';\n    if (detections.length > 0 && detections[0].expressions) {\n      const topExpression = Object.entries(detections[0].expressions)\n        .sort(([,a], [,b]) => b - a)[0];\n      expressionsSummary = `<p>Top Expression: <strong>${topExpression[0]} (${Math.round(topExpression[1] * 100)}%)</strong></p>`;\n    }\n    \n    stats.innerHTML = `\n      <p>Faces detected: <strong>${detections.length}</strong></p>\n      <p>Mode: <strong>Pro Mode</strong></p>\n      <p>Model: SSD MobileNet v1</p>\n      <p>Backend: <strong>${this.backendType}</strong></p>\n      <p>Features: 68-point landmarks, Expressions, Age/Gender</p>\n      ${expressionsSummary}\n      <p>FPS: <strong>${perfData.fps.toFixed(1)}</strong> (Target: 20)</p>\n      <p>Frame Time: <strong>${perfData.avgFrameTime.toFixed(1)}ms</strong></p>\n      <p>Avg Inference: <strong>${backendReport.averageInferenceTime.toFixed(2)}ms</strong></p>\n    `;\n  }\n\n  showError(message) {\n    const app = document.getElementById('app');\n    app.innerHTML = `\n      <div class=\"error\">\n        <h2>Error</h2>\n        <p>${message}</p>\n      </div>\n    `;\n  }\n\n  async switchMode(mode) {\n    this.stopDetection();\n    \n    if (this.currentMode === 'lite' && this.liteModeDetector) {\n      await this.liteModeDetector.cleanup();\n      this.liteModeDetector = null;\n    } else if (this.currentMode === 'pro' && this.proMode) {\n      this.proMode = null;\n    }\n    \n    this.currentMode = mode;\n    console.log(`Switching to ${mode} mode`);\n    \n    try {\n      if (mode === 'lite') {\n        this.liteModeDetector = new LiteModeDetector({\n          targetFPS: 30,\n          frameSkip: 0,\n          showConfidence: true,\n          boundingBoxColor: '#00ff00',\n          confidenceThreshold: parseFloat(document.getElementById('threshold').value)\n        });\n        await this.liteModeDetector.initialize(this.video, this.canvas);\n        this.isModelLoaded = true;\n        this.isVideoReady = true;\n      } else if (mode === 'pro') {\n        this.proMode = new ProMode();\n        await this.proMode.loadModels();\n        this.isModelLoaded = true;\n        this.isVideoReady = true;\n        this.setupProModeControls();\n      } else {\n        if (!this.isModelLoaded) {\n          await this.loadModels();\n        }\n        if (!this.isVideoReady) {\n          await this.setupCamera();\n        }\n      }\n    } catch (error) {\n      console.error('Failed to switch mode:', error);\n      this.showError('Failed to switch mode. Please try again.');\n    }\n  }\n\n  updateThreshold(value) {\n    if (this.currentMode === 'lite' && this.liteModeDetector) {\n      this.liteModeDetector.setDetectionThreshold(value);\n    }\n  }\n\n  async loadCameraList() {\n    try {\n      const cameras = await this.cameraManager.getAvailableCameras();\n      this.availableCameras = cameras;\n      \n      const cameraSelect = document.getElementById('cameraSelect');\n      const cameraSelector = document.getElementById('camera-selector');\n      \n      if (!cameraSelect || !cameraSelector) return;\n      \n      if (cameras.length > 1) {\n        cameraSelector.style.display = 'block';\n        cameraSelect.innerHTML = '';\n        \n        cameras.forEach(camera => {\n          const option = document.createElement('option');\n          option.value = camera.deviceId;\n          option.textContent = camera.label;\n          option.selected = camera.deviceId === this.currentCameraId;\n          cameraSelect.appendChild(option);\n        });\n      } else {\n        cameraSelector.style.display = 'none';\n      }\n    } catch (error) {\n      console.error('Failed to load camera list:', error);\n    }\n  }\n\n  async switchCamera(deviceId) {\n    try {\n      const wasDetecting = this.detectionInterval || (this.liteModeDetector && this.liteModeDetector.isRunning);\n      if (wasDetecting) {\n        this.stopDetection();\n      }\n      \n      await this.cameraManager.selectCamera(deviceId);\n      this.currentCameraId = deviceId;\n      \n      this.adjustCanvas();\n      \n      if (wasDetecting) {\n        await this.startDetection();\n      }\n    } catch (error) {\n      console.error('Failed to switch camera:', error);\n      this.showError('Failed to switch camera. Please try again.');\n    }\n  }\n\n  async switchBackend(backend) {\n    console.log('Switching backend to:', backend);\n    \n    // Stop detection\n    this.stopDetection();\n    \n    // Clear models\n    this.isModelLoaded = false;\n    \n    // Switch backend\n    try {\n      const tf = await import('@tensorflow/tfjs');\n      await tf.setBackend(backend);\n      await tf.ready();\n      \n      this.backendType = backend;\n      this.updateBackendDisplay();\n      \n      // Reload models with new backend\n      await this.loadModels();\n      \n      // Reset backend monitor\n      this.backendMonitor.reset();\n      \n      console.log('Backend switched successfully to:', backend);\n    } catch (error) {\n      console.error('Failed to switch backend:', error);\n      this.showError(`Failed to switch to ${backend} backend`);\n    }\n  }\n\n  updateBackendDisplay() {\n    const backendInfo = document.getElementById('backend-info');\n    if (backendInfo) {\n      const perfInfo = getBackendPerformance();\n      const isWASM = this.backendType === 'wasm';\n      const color = isWASM ? '#28a745' : '#6c757d';\n      \n      backendInfo.innerHTML = `\n        <div class=\"backend-status\" style=\"\n          background-color: ${color};\n          color: white;\n          padding: 10px 15px;\n          border-radius: 8px;\n          margin-bottom: 15px;\n          text-align: center;\n          font-family: monospace;\n        \">\n          <div style=\"font-size: 18px; font-weight: bold; margin-bottom: 5px;\">\n            ${isWASM ? '🚀 WASM ACTIVE' : this.backendType.toUpperCase() + ' MODE'}\n          </div>\n          <div style=\"font-size: 14px;\">\n            Backend: <strong>${this.backendType}</strong>\n            ${perfInfo.features.simd ? ' | SIMD ✓' : ' | SIMD ✗'}\n            ${perfInfo.features.threads ? ' | Threads ✓' : ' | Threads ✗'}\n          </div>\n          ${isWASM ? '<div style=\"font-size: 12px; margin-top: 5px;\">8-20X faster inference</div>' : ''}\n        </div>\n      `;\n    }\n  }\n\n  getBackendInfo() {\n    return {\n      name: this.backendType,\n      features: getBackendPerformance().features,\n      performance: this.backendMonitor.getReport()\n    };\n  }\n\n  // Methods for test compatibility\n  getLiteModeOptions() {\n    return {\n      inputSize: 320,\n      scoreThreshold: 0.5\n    };\n  }\n\n  getProModeOptions() {\n    return {\n      minConfidence: 0.5,\n      maxResults: 10\n    };\n  }\n}\n\n// Initialize app when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  const app = new FaceDetectionApp();\n  app.init();\n  // Expose app instance for testing\n  window.app = app;\n});","/* (ignored) */","/* (ignored) */"],"names":["AppConfig","_classCallCheck","config","loadConfig","_createClass","key","value","defaultConfig","prefix","modelPath","basePath","window","APP_CONFIG","_objectSpread","location","path","pathname","pathParts","split","filter","Boolean","length","includes","detectedPrefix","concat","get","getPath","cleanPath","replace","getModelUrl","debug","currentPath","currentHost","host","appConfig","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","getOwnPropertyDescriptor","push","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","_toPrimitive","_typeof","toPrimitive","String","Number","faceapi","FaceDetector","options","undefined","detectionThreshold","inputSize","isModelLoaded","detector","_loadModel","_callee","_t","_context","nets","tinyFaceDetector","loadFromUri","TinyFaceDetectorOptions","scoreThreshold","console","error","Error","message","loadModel","_detect","_callee2","input","detections","_t2","_context2","detectAllFaces","detect","_x","_detectWithLandmarks","_callee3","_t3","_context3","withFaceLandmarks","detectWithLandmarks","_x2","setDetectionThreshold","threshold","setInputSize","size","validSizes","join","getOptions","isReady","DrawingUtils","canvas","ctx","getContext","setCanvas","clear","clearRect","width","height","drawBoundingBox","box","color","lineWidth","x","strokeStyle","strokeRect","drawFilledBox","fillColor","borderColor","borderWidth","fillStyle","fillRect","drawText","text","_options$color","_options$font","font","_options$align","align","_options$baseline","baseline","_options$backgroundCo","backgroundColor","_options$padding","padding","_options$borderRadius","borderRadius","textAlign","textBaseline","metrics","measureText","textWidth","textHeight","parseInt","drawRoundedRect","fillText","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","drawPoint","arc","Math","PI","drawLine","x1","y1","x2","y2","stroke","drawPolygon","points","_options$fillColor","_options$strokeColor","strokeColor","_options$lineWidth","_options$closed","closed","drawCircle","_options$fillColor2","_options$strokeColor2","_options$lineWidth2","drawImage","image","setGlobalAlpha","alpha","globalAlpha","max","min","save","restore","previousFont","CameraManager","preferredWidth","preferredHeight","facingMode","stream","videoElement","isActive","_startCamera","constraints","warn","navigator","mediaDevices","getUserMedia","getCameraConstraints","srcObject","waitForVideoReady","handleCameraError","startCamera","_waitForVideoReady","_this","reject","readyState","timeout","setTimeout","addEventListener","clearTimeout","once","errorMessage","name","_stopCamera","getTracks","track","stop","stopCamera","_switchCamera","_callee4","_context4","switchCamera","_getAvailableCameras","_callee5","tempStream","devices","cameras","_context5","video","enumerateDevices","device","kind","map","camera","index","deviceId","label","groupId","getAvailableCameras","_selectCamera","_callee6","_context6","selectCamera","ideal","exact","getStreamInfo","active","videoTrack","getVideoTracks","settings","getSettings","frameRate","isStreamActive","_takeSnapshot","_callee7","_context7","document","createElement","videoWidth","videoHeight","toDataURL","takeSnapshot","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","constructor","Array","from","test","isArray","PerformanceMonitor","sampleSize","warningThreshold","reset","frameTimes","frameStartTime","lastFrameTime","totalFrames","Map","startTime","performance","now","startFrame","endFrame","frameTime","shift","getCurrentFPS","averageFrameTime","getAverageFrameTime","round","sum","reduce","acc","time","getMinFrameTime","getMaxFrameTime","start","set","endTime","duration","end","metric","measure","fn","result","_measureAsync","asyncFn","measureAsync","getMetric","getAllMetrics","results","_iterator","_createForOfIteratorHelper","_step","s","_step$value","_slicedToArray","err","getSummary","fps","avgFrameTime","minFrameTime","maxFrameTime","totalTime","averageFPS","isPerformanceGood","getFrameTimeDistribution","buckets","getPerformanceScore","fpsScore","minTime","maxTime","variance","consistencyScore","logSummary","summary","group","log","toFixed","distribution","groupEnd","global","LiteModeDetector","targetFPS","frameSkip","showConfidence","boundingBoxColor","boundingBoxWidth","confidenceThreshold","drawingUtils","cameraManager","performanceMonitor","isRunning","frameCount","animationId","_initialize","canvasElement","adjustCanvasSize","initialize","detectLoop","cancelAnimationFrame","_detectLoop","displaySize","resizedDetections","requestAnimationFrame","resizeResults","detection","score","confidence","updatePerformanceDisplay","avgDetectionTime","setFrameSkip","skip","setBoundingBoxStyle","getPerformanceStats","_cleanup","cleanup","FACIAL_REGIONS","jawline","rightEyebrow","leftEyebrow","nose","rightEye","leftEye","outerMouth","innerMouth","LANDMARK_CONNECTIONS","idx","drawLandmarks","landmarks","style","positions","point","region","getRegionForPoint","regionColors","landmarkColor","landmarkSize","connectionColor","_ref","_ref2","drawFaceContours","contourColor","lineCap","lineJoin","drawSmoothCurve","drawExpressions","expressions","sortedExpressions","entries","_ref3","_ref4","_","sort","_ref5","_ref6","_ref7","_ref8","__","b","yOffset","_ref9","_ref0","expression","percentage","getExpressionColor","drawAgeGender","age","gender","ageText","genderText","yPosition","maxWidth","xc","yc","colors","happy","sad","angry","surprised","disgusted","fearful","neutral","animateLandmarks","currentLandmarks","targetLandmarks","progress","current","target","getLandmarkRegions","getLandmarkConnections","ProMode","modelsLoaded","modelPromise","detectionOptions","features","ageGender","faceRecognition","contours","regions","visualizationStyle","mouth","_loadModels","MODEL_URL","all","ssdMobilenetv1","faceLandmark68Net","faceExpressionNet","ageGenderNet","faceRecognitionNet","SsdMobilenetv1Options","minConfidence","maxResults","loadModels","_detectFaces","withFaceExpressions","withAgeAndGender","detectFaces","drawDetections","_this2","faceDetection","cornerLength","toggleFeature","feature","hasOwnProperty","updateVisualizationStyle","exportDetectionData","boundingBox","getPerformanceTarget","_this3","mode","tf","setWasmPaths","setThreadsCount","configureWASMPaths","wasmPath","detectWASMFeatures","_detectWASMFeatures","simdTest","tfFeatures","simdSupport","threadsSupport","backendName","WebAssembly","validate","Uint8Array","SharedArrayBuffer","getBackend","env","getAsync","webglPack","configureWASMThreads","_configureWASMThreads","numCores","optimalThreads","threads","multithreading","hardwareConcurrency","floor","initializeWASMBackend","_initializeWASMBackend","threadConfig","currentBackend","testTensor","resultTensor","testTime","backend","fallback","setBackend","ready","randomNormal","matMul","data","dispose","getBackendPerformance","memory","numTensors","numDataBuffers","numBytes","unreliable","simd","getBool","handleWASMError","_handleWASMError","errorInfo","recommendation","warmupBackend","_warmupBackend","warmupData","conv2d","BackendMonitor","inferenceCount","totalInferenceTime","memorySnapshots","startInference","endInference","timestamp","Date","getAverageInferenceTime","getReport","averageInferenceTime","currentMemory","memoryTrend","FaceDetectionApp","isVideoReady","detectionInterval","currentMode","liteModeDetector","proMode","availableCameras","currentCameraId","preferredBackend","enableSIMD","enableThreads","backendType","backendMonitor","_init","initializeBackend","setupUI","setupCamera","startDetection","showError","init","_initializeBackend","backendResult","monkeyPatch","Canvas","HTMLCanvasElement","Image","HTMLImageElement","ImageData","Video","HTMLVideoElement","createCanvasElement","createImageElement","updateBackendDisplay","modelPromises","perfInfo","app","getElementById","innerHTML","onclick","stopDetection","querySelectorAll","radio","switchMode","display","setupProModeControls","thresholdSlider","parseFloat","textContent","updateThreshold","cameraSelect","backendSelect","switchBackend","loadCameraList","_setupCamera","streamInfo","adjustCanvas","checkbox","_startDetection","_callee9","_context9","disabled","setInterval","detectFacesPro","_callee8","_context8","clearInterval","_callee0","_context0","draw","drawFaceLandmarks","drawFaceExpressions","genderProbability","_detection$detection$","updateStats","_detectFacesPro","_callee1","inferenceStart","_t4","_context1","recordFrame","updateProStats","faceCount","stats","backendReport","perfData","getMetrics","expressionsSummary","topExpression","_switchMode","_callee10","_t5","_context10","_x3","_loadCameraList","_callee11","_this4","cameraSelector","_t6","_context11","option","selected","appendChild","_callee12","wasDetecting","_t7","_context12","_x4","_switchBackend","_callee13","_t8","_context13","_x5","backendInfo","isWASM","toUpperCase","getBackendInfo","getLiteModeOptions","getProModeOptions"],"sourceRoot":""}
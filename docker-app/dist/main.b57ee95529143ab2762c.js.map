{"version":3,"file":"main.b57ee95529143ab2762c.js","mappings":"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CA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC,OAAO,iFAAiF,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,WAAW,MAAM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","sources":["webpack://face-detection-app/./src/styles.css?44b2","webpack://face-detection-app/./src/faceDetection.js","webpack://face-detection-app/./src/drawingUtils.js","webpack://face-detection-app/./src/cameraUtils.js","webpack://face-detection-app/./src/performanceMonitor.js","webpack://face-detection-app/./src/liteMode.js","webpack://face-detection-app/./src/landmarkDrawing.js","webpack://face-detection-app/./src/proMode.js","webpack://face-detection-app/./src/index.js","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-core/dist|crypto","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-core/dist|node-fetch","webpack://face-detection-app/./src/styles.css","webpack://face-detection-app/ignored|/workspaces/face-detection/face-detection-repo/docker-app/node_modules/@tensorflow/tfjs-core/dist|util"],"sourcesContent":["\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as faceapi from 'face-api.js';\n\nexport class FaceDetector {\n  constructor(options = {}) {\n    this.options = {\n      modelPath: options.modelPath || '/models',\n      detectionThreshold: options.detectionThreshold || 0.5,\n      inputSize: options.inputSize || 416,\n      ...options\n    };\n    \n    this.isModelLoaded = false;\n    this.detector = null;\n  }\n\n  async loadModel() {\n    try {\n      await faceapi.nets.tinyFaceDetector.loadFromUri(this.options.modelPath);\n      this.detector = new faceapi.TinyFaceDetectorOptions({\n        inputSize: this.options.inputSize,\n        scoreThreshold: this.options.detectionThreshold\n      });\n      this.isModelLoaded = true;\n      return true;\n    } catch (error) {\n      console.error('Failed to load face detection model:', error);\n      throw new Error('Model loading failed: ' + error.message);\n    }\n  }\n\n  async detect(input) {\n    if (!this.isModelLoaded) {\n      throw new Error('Model not loaded. Call loadModel() first.');\n    }\n\n    try {\n      const detections = await faceapi.detectAllFaces(input, this.detector);\n      return detections;\n    } catch (error) {\n      console.error('Face detection failed:', error);\n      return [];\n    }\n  }\n\n  async detectWithLandmarks(input) {\n    if (!this.isModelLoaded) {\n      throw new Error('Model not loaded. Call loadModel() first.');\n    }\n\n    try {\n      const detections = await faceapi.detectAllFaces(input, this.detector)\n        .withFaceLandmarks();\n      return detections;\n    } catch (error) {\n      console.error('Face detection with landmarks failed:', error);\n      return [];\n    }\n  }\n\n  setDetectionThreshold(threshold) {\n    if (threshold < 0 || threshold > 1) {\n      throw new Error('Threshold must be between 0 and 1');\n    }\n    \n    this.options.detectionThreshold = threshold;\n    this.detector = new faceapi.TinyFaceDetectorOptions({\n      inputSize: this.options.inputSize,\n      scoreThreshold: threshold\n    });\n  }\n\n  setInputSize(size) {\n    const validSizes = [128, 160, 224, 320, 416, 512, 608];\n    if (!validSizes.includes(size)) {\n      throw new Error(`Input size must be one of: ${validSizes.join(', ')}`);\n    }\n    \n    this.options.inputSize = size;\n    this.detector = new faceapi.TinyFaceDetectorOptions({\n      inputSize: size,\n      scoreThreshold: this.options.detectionThreshold\n    });\n  }\n\n  getOptions() {\n    return { ...this.options };\n  }\n\n  isReady() {\n    return this.isModelLoaded;\n  }\n}\n\nexport default FaceDetector;","export class DrawingUtils {\n  constructor(canvas = null) {\n    this.canvas = canvas;\n    this.ctx = canvas ? canvas.getContext('2d') : null;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n  }\n\n  clear() {\n    if (!this.ctx) return;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  drawBoundingBox(box, color = '#00ff00', lineWidth = 2) {\n    if (!this.ctx) return;\n\n    const { x, y, width, height } = box;\n    \n    this.ctx.strokeStyle = color;\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeRect(x, y, width, height);\n  }\n\n  drawFilledBox(box, fillColor = 'rgba(0, 255, 0, 0.2)', borderColor = '#00ff00', borderWidth = 2) {\n    if (!this.ctx) return;\n\n    const { x, y, width, height } = box;\n    \n    // Fill\n    this.ctx.fillStyle = fillColor;\n    this.ctx.fillRect(x, y, width, height);\n    \n    // Border\n    if (borderWidth > 0) {\n      this.ctx.strokeStyle = borderColor;\n      this.ctx.lineWidth = borderWidth;\n      this.ctx.strokeRect(x, y, width, height);\n    }\n  }\n\n  drawText(text, x, y, options = {}) {\n    if (!this.ctx) return;\n\n    const {\n      color = '#ffffff',\n      font = '16px Arial',\n      align = 'left',\n      baseline = 'top',\n      backgroundColor = null,\n      padding = 0,\n      borderRadius = 0\n    } = options;\n\n    this.ctx.font = font;\n    this.ctx.textAlign = align;\n    this.ctx.textBaseline = baseline;\n\n    // Measure text for background\n    const metrics = this.ctx.measureText(text);\n    const textWidth = metrics.width;\n    const textHeight = parseInt(font); // Approximate height\n\n    // Draw background if specified\n    if (backgroundColor) {\n      if (borderRadius > 0) {\n        this.drawRoundedRect(\n          x - padding,\n          y - padding,\n          textWidth + padding * 2,\n          textHeight + padding * 2,\n          borderRadius,\n          backgroundColor\n        );\n      } else {\n        this.ctx.fillStyle = backgroundColor;\n        this.ctx.fillRect(\n          x - padding,\n          y - padding,\n          textWidth + padding * 2,\n          textHeight + padding * 2\n        );\n      }\n    }\n\n    // Draw text\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(text, x, y);\n  }\n\n  drawRoundedRect(x, y, width, height, radius, fillColor) {\n    if (!this.ctx) return;\n\n    this.ctx.fillStyle = fillColor;\n    this.ctx.beginPath();\n    this.ctx.moveTo(x + radius, y);\n    this.ctx.lineTo(x + width - radius, y);\n    this.ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    this.ctx.lineTo(x + width, y + height - radius);\n    this.ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    this.ctx.lineTo(x + radius, y + height);\n    this.ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    this.ctx.lineTo(x, y + radius);\n    this.ctx.quadraticCurveTo(x, y, x + radius, y);\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n\n  drawPoint(x, y, radius = 3, color = '#ff0000') {\n    if (!this.ctx) return;\n\n    this.ctx.fillStyle = color;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n  }\n\n  drawLine(x1, y1, x2, y2, color = '#00ff00', lineWidth = 1) {\n    if (!this.ctx) return;\n\n    this.ctx.strokeStyle = color;\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.beginPath();\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.stroke();\n  }\n\n  drawPolygon(points, options = {}) {\n    if (!this.ctx || !points || points.length < 3) return;\n\n    const {\n      fillColor = null,\n      strokeColor = '#00ff00',\n      lineWidth = 1,\n      closed = true\n    } = options;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(points[0].x, points[0].y);\n    \n    for (let i = 1; i < points.length; i++) {\n      this.ctx.lineTo(points[i].x, points[i].y);\n    }\n    \n    if (closed) {\n      this.ctx.closePath();\n    }\n\n    if (fillColor) {\n      this.ctx.fillStyle = fillColor;\n      this.ctx.fill();\n    }\n\n    if (strokeColor && lineWidth > 0) {\n      this.ctx.strokeStyle = strokeColor;\n      this.ctx.lineWidth = lineWidth;\n      this.ctx.stroke();\n    }\n  }\n\n  drawCircle(x, y, radius, options = {}) {\n    if (!this.ctx) return;\n\n    const {\n      fillColor = null,\n      strokeColor = '#00ff00',\n      lineWidth = 1\n    } = options;\n\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n\n    if (fillColor) {\n      this.ctx.fillStyle = fillColor;\n      this.ctx.fill();\n    }\n\n    if (strokeColor && lineWidth > 0) {\n      this.ctx.strokeStyle = strokeColor;\n      this.ctx.lineWidth = lineWidth;\n      this.ctx.stroke();\n    }\n  }\n\n  drawImage(image, x, y, width = null, height = null) {\n    if (!this.ctx) return;\n\n    if (width && height) {\n      this.ctx.drawImage(image, x, y, width, height);\n    } else {\n      this.ctx.drawImage(image, x, y);\n    }\n  }\n\n  setGlobalAlpha(alpha) {\n    if (!this.ctx) return;\n    this.ctx.globalAlpha = Math.max(0, Math.min(1, alpha));\n  }\n\n  save() {\n    if (!this.ctx) return;\n    this.ctx.save();\n  }\n\n  restore() {\n    if (!this.ctx) return;\n    this.ctx.restore();\n  }\n\n  measureText(text, font = '16px Arial') {\n    if (!this.ctx) return { width: 0, height: 0 };\n    \n    const previousFont = this.ctx.font;\n    this.ctx.font = font;\n    const metrics = this.ctx.measureText(text);\n    this.ctx.font = previousFont;\n    \n    return {\n      width: metrics.width,\n      height: parseInt(font) // Approximate height\n    };\n  }\n}\n\nexport default DrawingUtils;","export class CameraManager {\n  constructor(options = {}) {\n    this.options = {\n      preferredWidth: options.preferredWidth || 640,\n      preferredHeight: options.preferredHeight || 480,\n      facingMode: options.facingMode || 'user',\n      ...options\n    };\n    \n    this.stream = null;\n    this.videoElement = null;\n    this.isActive = false;\n  }\n\n  async startCamera(videoElement) {\n    if (this.isActive) {\n      console.warn('Camera is already active');\n      return this.stream;\n    }\n\n    this.videoElement = videoElement;\n\n    try {\n      // Check if getUserMedia is available\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error('getUserMedia is not supported in this browser');\n      }\n\n      // Request camera access with constraints\n      const constraints = {\n        video: {\n          width: { ideal: this.options.preferredWidth },\n          height: { ideal: this.options.preferredHeight },\n          facingMode: this.options.facingMode\n        }\n      };\n\n      this.stream = await navigator.mediaDevices.getUserMedia(constraints);\n      \n      // Attach stream to video element\n      this.videoElement.srcObject = this.stream;\n      \n      // Wait for video to be ready\n      await this.waitForVideoReady();\n      \n      this.isActive = true;\n      \n      return this.stream;\n    } catch (error) {\n      this.handleCameraError(error);\n      throw error;\n    }\n  }\n\n  async waitForVideoReady() {\n    return new Promise((resolve, reject) => {\n      if (this.videoElement.readyState >= 2) {\n        resolve();\n        return;\n      }\n\n      const timeout = setTimeout(() => {\n        reject(new Error('Video loading timeout'));\n      }, 10000);\n\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        clearTimeout(timeout);\n        resolve();\n      }, { once: true });\n\n      this.videoElement.addEventListener('error', (error) => {\n        clearTimeout(timeout);\n        reject(error);\n      }, { once: true });\n    });\n  }\n\n  handleCameraError(error) {\n    let errorMessage = 'Camera access error: ';\n\n    if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n      errorMessage += 'Camera permission denied. Please allow camera access.';\n    } else if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n      errorMessage += 'No camera found on this device.';\n    } else if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n      errorMessage += 'Camera is already in use by another application.';\n    } else if (error.name === 'OverconstrainedError' || error.name === 'ConstraintNotSatisfiedError') {\n      errorMessage += 'Camera does not support the requested resolution.';\n    } else if (error.name === 'TypeError') {\n      errorMessage += 'Invalid camera constraints.';\n    } else {\n      errorMessage += error.message || 'Unknown error occurred.';\n    }\n\n    console.error(errorMessage, error);\n    throw new Error(errorMessage);\n  }\n\n  async stopCamera() {\n    if (this.stream) {\n      // Stop all tracks\n      this.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n      \n      // Clear video source\n      if (this.videoElement) {\n        this.videoElement.srcObject = null;\n      }\n      \n      this.stream = null;\n      this.isActive = false;\n    }\n  }\n\n  async switchCamera() {\n    if (!this.isActive) {\n      throw new Error('Camera is not active');\n    }\n\n    // Toggle facing mode\n    this.options.facingMode = this.options.facingMode === 'user' ? 'environment' : 'user';\n    \n    // Stop current camera\n    await this.stopCamera();\n    \n    // Start with new camera\n    await this.startCamera(this.videoElement);\n  }\n\n  async getAvailableCameras() {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return devices.filter(device => device.kind === 'videoinput');\n    } catch (error) {\n      console.error('Failed to enumerate devices:', error);\n      return [];\n    }\n  }\n\n  async selectCamera(deviceId) {\n    if (!deviceId) {\n      throw new Error('Device ID is required');\n    }\n\n    this.options.deviceId = deviceId;\n    \n    if (this.isActive) {\n      await this.stopCamera();\n      await this.startCamera(this.videoElement);\n    }\n  }\n\n  getCameraConstraints() {\n    const constraints = {\n      video: {\n        width: { ideal: this.options.preferredWidth },\n        height: { ideal: this.options.preferredHeight }\n      }\n    };\n\n    if (this.options.deviceId) {\n      constraints.video.deviceId = { exact: this.options.deviceId };\n    } else {\n      constraints.video.facingMode = this.options.facingMode;\n    }\n\n    return constraints;\n  }\n\n  getStreamInfo() {\n    if (!this.stream || !this.stream.active) {\n      return null;\n    }\n\n    const videoTrack = this.stream.getVideoTracks()[0];\n    if (!videoTrack) {\n      return null;\n    }\n\n    const settings = videoTrack.getSettings();\n    return {\n      width: settings.width,\n      height: settings.height,\n      frameRate: settings.frameRate,\n      deviceId: settings.deviceId,\n      facingMode: settings.facingMode,\n      label: videoTrack.label\n    };\n  }\n\n  isStreamActive() {\n    return this.isActive && this.stream && this.stream.active;\n  }\n\n  async takeSnapshot() {\n    if (!this.videoElement || !this.isActive) {\n      throw new Error('Camera is not active');\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = this.videoElement.videoWidth;\n    canvas.height = this.videoElement.videoHeight;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(this.videoElement, 0, 0);\n    \n    return canvas.toDataURL('image/png');\n  }\n}\n\nexport default CameraManager;","export class PerformanceMonitor {\n  constructor(options = {}) {\n    this.options = {\n      sampleSize: options.sampleSize || 60, // Keep last 60 frames for FPS calculation\n      warningThreshold: options.warningThreshold || 15, // FPS warning threshold\n      ...options\n    };\n\n    this.reset();\n  }\n\n  reset() {\n    this.frameTimes = [];\n    this.frameStartTime = 0;\n    this.lastFrameTime = 0;\n    this.totalFrames = 0;\n    this.metrics = new Map();\n    this.startTime = performance.now();\n  }\n\n  startFrame() {\n    this.frameStartTime = performance.now();\n  }\n\n  endFrame() {\n    if (this.frameStartTime === 0) return;\n\n    const frameTime = performance.now() - this.frameStartTime;\n    this.frameTimes.push(frameTime);\n    \n    // Keep only the last N samples\n    if (this.frameTimes.length > this.options.sampleSize) {\n      this.frameTimes.shift();\n    }\n    \n    this.lastFrameTime = performance.now();\n    this.totalFrames++;\n    this.frameStartTime = 0;\n  }\n\n  getCurrentFPS() {\n    if (this.frameTimes.length < 2) return 0;\n\n    const averageFrameTime = this.getAverageFrameTime();\n    if (averageFrameTime === 0) return 0;\n\n    return Math.round(1000 / averageFrameTime);\n  }\n\n  getAverageFrameTime() {\n    if (this.frameTimes.length === 0) return 0;\n\n    const sum = this.frameTimes.reduce((acc, time) => acc + time, 0);\n    return sum / this.frameTimes.length;\n  }\n\n  getMinFrameTime() {\n    if (this.frameTimes.length === 0) return 0;\n    return Math.min(...this.frameTimes);\n  }\n\n  getMaxFrameTime() {\n    if (this.frameTimes.length === 0) return 0;\n    return Math.max(...this.frameTimes);\n  }\n\n  start(label) {\n    this.metrics.set(label, {\n      startTime: performance.now(),\n      endTime: null,\n      duration: null\n    });\n  }\n\n  end(label) {\n    const metric = this.metrics.get(label);\n    if (!metric || metric.endTime !== null) {\n      console.warn(`Performance metric \"${label}\" not started or already ended`);\n      return 0;\n    }\n\n    metric.endTime = performance.now();\n    metric.duration = metric.endTime - metric.startTime;\n    \n    return metric.duration;\n  }\n\n  measure(label, fn) {\n    this.start(label);\n    try {\n      const result = fn();\n      if (result instanceof Promise) {\n        return result.finally(() => this.end(label));\n      }\n      this.end(label);\n      return result;\n    } catch (error) {\n      this.end(label);\n      throw error;\n    }\n  }\n\n  async measureAsync(label, asyncFn) {\n    this.start(label);\n    try {\n      const result = await asyncFn();\n      this.end(label);\n      return result;\n    } catch (error) {\n      this.end(label);\n      throw error;\n    }\n  }\n\n  getMetric(label) {\n    const metric = this.metrics.get(label);\n    if (!metric || metric.duration === null) {\n      return null;\n    }\n    return metric.duration;\n  }\n\n  getAllMetrics() {\n    const results = {};\n    for (const [label, metric] of this.metrics) {\n      if (metric.duration !== null) {\n        results[label] = metric.duration;\n      }\n    }\n    return results;\n  }\n\n  getSummary() {\n    const fps = this.getCurrentFPS();\n    const avgFrameTime = this.getAverageFrameTime();\n    const minFrameTime = this.getMinFrameTime();\n    const maxFrameTime = this.getMaxFrameTime();\n    const totalTime = performance.now() - this.startTime;\n    \n    return {\n      fps,\n      avgFrameTime,\n      minFrameTime,\n      maxFrameTime,\n      totalFrames: this.totalFrames,\n      totalTime,\n      averageFPS: this.totalFrames / (totalTime / 1000),\n      isPerformanceGood: fps >= this.options.warningThreshold,\n      metrics: this.getAllMetrics()\n    };\n  }\n\n  getFrameTimeDistribution() {\n    if (this.frameTimes.length === 0) return {};\n\n    const buckets = {\n      '<16ms': 0,\n      '16-33ms': 0,\n      '33-50ms': 0,\n      '50-100ms': 0,\n      '>100ms': 0\n    };\n\n    this.frameTimes.forEach(time => {\n      if (time < 16) buckets['<16ms']++;\n      else if (time < 33) buckets['16-33ms']++;\n      else if (time < 50) buckets['33-50ms']++;\n      else if (time < 100) buckets['50-100ms']++;\n      else buckets['>100ms']++;\n    });\n\n    return buckets;\n  }\n\n  getPerformanceScore() {\n    const fps = this.getCurrentFPS();\n    const avgFrameTime = this.getAverageFrameTime();\n    \n    // Score based on FPS (0-50 points)\n    let fpsScore = Math.min(50, (fps / 60) * 50);\n    \n    // Score based on frame time consistency (0-50 points)\n    const minTime = this.getMinFrameTime();\n    const maxTime = this.getMaxFrameTime();\n    const variance = maxTime - minTime;\n    let consistencyScore = Math.max(0, 50 - variance);\n    \n    return Math.round(fpsScore + consistencyScore);\n  }\n\n  logSummary() {\n    const summary = this.getSummary();\n    console.group('Performance Summary');\n    console.log(`FPS: ${summary.fps}`);\n    console.log(`Average Frame Time: ${summary.avgFrameTime.toFixed(2)}ms`);\n    console.log(`Frame Time Range: ${summary.minFrameTime.toFixed(2)}ms - ${summary.maxFrameTime.toFixed(2)}ms`);\n    console.log(`Total Frames: ${summary.totalFrames}`);\n    console.log(`Total Time: ${(summary.totalTime / 1000).toFixed(2)}s`);\n    console.log(`Performance Score: ${this.getPerformanceScore()}/100`);\n    \n    const distribution = this.getFrameTimeDistribution();\n    console.log('Frame Time Distribution:', distribution);\n    \n    if (Object.keys(summary.metrics).length > 0) {\n      console.log('Custom Metrics:', summary.metrics);\n    }\n    \n    console.groupEnd();\n  }\n}\n\n// Static instance for global performance monitoring\nPerformanceMonitor.global = new PerformanceMonitor();\n\nexport default PerformanceMonitor;","import FaceDetector from './faceDetection.js';\nimport { DrawingUtils } from './drawingUtils.js';\nimport { CameraManager } from './cameraUtils.js';\nimport { PerformanceMonitor } from './performanceMonitor.js';\nimport * as faceapi from 'face-api.js';\n\nexport class LiteModeDetector {\n  constructor(options = {}) {\n    this.options = {\n      targetFPS: options.targetFPS || 30,\n      frameSkip: options.frameSkip || 0,\n      showConfidence: options.showConfidence !== false,\n      boundingBoxColor: options.boundingBoxColor || '#00ff00',\n      boundingBoxWidth: options.boundingBoxWidth || 2,\n      confidenceThreshold: options.confidenceThreshold || 0.5,\n      ...options\n    };\n\n    this.detector = new FaceDetector({\n      detectionThreshold: this.options.confidenceThreshold\n    });\n    \n    this.drawingUtils = new DrawingUtils();\n    this.cameraManager = new CameraManager();\n    this.performanceMonitor = new PerformanceMonitor();\n    \n    this.video = null;\n    this.canvas = null;\n    this.isRunning = false;\n    this.frameCount = 0;\n    this.animationId = null;\n  }\n\n  async initialize(videoElement, canvasElement) {\n    this.video = videoElement;\n    this.canvas = canvasElement;\n    \n    // Load the face detection model\n    await this.detector.loadModel();\n    \n    // Setup camera\n    await this.cameraManager.startCamera(this.video);\n    \n    // Adjust canvas size to match video\n    this.adjustCanvasSize();\n    \n    // Initialize drawing utils with canvas\n    this.drawingUtils.setCanvas(this.canvas);\n    \n    return true;\n  }\n\n  adjustCanvasSize() {\n    if (this.video && this.canvas) {\n      this.canvas.width = this.video.videoWidth;\n      this.canvas.height = this.video.videoHeight;\n    }\n  }\n\n  start() {\n    if (this.isRunning) {\n      console.warn('Lite mode detection is already running');\n      return;\n    }\n\n    this.isRunning = true;\n    this.frameCount = 0;\n    this.performanceMonitor.reset();\n    this.detectLoop();\n  }\n\n  stop() {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n    \n    // Clear the canvas\n    this.drawingUtils.clear();\n    \n    // Log performance summary\n    const summary = this.performanceMonitor.getSummary();\n    console.log('Performance Summary:', summary);\n  }\n\n  async detectLoop() {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.performanceMonitor.startFrame();\n\n    // Skip frames if configured\n    if (this.options.frameSkip > 0 && this.frameCount % (this.options.frameSkip + 1) !== 0) {\n      this.frameCount++;\n      this.animationId = requestAnimationFrame(() => this.detectLoop());\n      return;\n    }\n\n    try {\n      // Perform face detection\n      const detections = await this.detector.detect(this.video);\n      \n      // Resize results to match display size\n      const displaySize = {\n        width: this.video.videoWidth,\n        height: this.video.videoHeight\n      };\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      \n      // Clear previous drawings\n      this.drawingUtils.clear();\n      \n      // Draw bounding boxes for each detection\n      resizedDetections.forEach(detection => {\n        const box = detection.box || detection.detection.box;\n        const score = detection.score || detection.detection.score;\n        \n        // Draw bounding box\n        this.drawingUtils.drawBoundingBox(\n          box,\n          this.options.boundingBoxColor,\n          this.options.boundingBoxWidth\n        );\n        \n        // Draw confidence score if enabled\n        if (this.options.showConfidence) {\n          const confidence = Math.round(score * 100);\n          this.drawingUtils.drawText(\n            `${confidence}%`,\n            box.x,\n            box.y - 5,\n            {\n              color: this.options.boundingBoxColor,\n              font: '14px Arial',\n              backgroundColor: 'rgba(0, 0, 0, 0.5)',\n              padding: 2\n            }\n          );\n        }\n      });\n      \n      // Update performance metrics\n      this.performanceMonitor.endFrame();\n      this.updatePerformanceDisplay();\n      \n    } catch (error) {\n      console.error('Detection error:', error);\n    }\n\n    this.frameCount++;\n    this.animationId = requestAnimationFrame(() => this.detectLoop());\n  }\n\n  updatePerformanceDisplay() {\n    const fps = this.performanceMonitor.getCurrentFPS();\n    const avgDetectionTime = this.performanceMonitor.getAverageFrameTime();\n    \n    // Draw FPS counter\n    this.drawingUtils.drawText(\n      `FPS: ${fps}`,\n      10,\n      25,\n      {\n        color: fps >= 15 ? '#00ff00' : '#ff0000',\n        font: '16px Arial',\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        padding: 5\n      }\n    );\n    \n    // Draw detection time\n    this.drawingUtils.drawText(\n      `Detection: ${avgDetectionTime.toFixed(1)}ms`,\n      10,\n      50,\n      {\n        color: '#00ff00',\n        font: '14px Arial',\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        padding: 5\n      }\n    );\n  }\n\n  setDetectionThreshold(threshold) {\n    this.options.confidenceThreshold = threshold;\n    this.detector.setDetectionThreshold(threshold);\n  }\n\n  setFrameSkip(skip) {\n    if (skip < 0) {\n      throw new Error('Frame skip must be non-negative');\n    }\n    this.options.frameSkip = skip;\n  }\n\n  setBoundingBoxStyle(color, width) {\n    if (color) this.options.boundingBoxColor = color;\n    if (width) this.options.boundingBoxWidth = width;\n  }\n\n  getPerformanceStats() {\n    return this.performanceMonitor.getSummary();\n  }\n\n  async cleanup() {\n    this.stop();\n    await this.cameraManager.stopCamera();\n  }\n}\n\nexport default LiteModeDetector;","/**\n * Advanced Landmark Drawing Utilities for Pro Mode\n * Handles 68-point facial landmarks visualization with connections\n */\n\n// Define landmark point indices for different facial regions\nconst FACIAL_REGIONS = {\n  jawline: [...Array(17).keys()], // 0-16\n  rightEyebrow: [...Array(5).keys()].map(i => i + 17), // 17-21\n  leftEyebrow: [...Array(5).keys()].map(i => i + 22), // 22-26\n  nose: [...Array(9).keys()].map(i => i + 27), // 27-35\n  rightEye: [...Array(6).keys()].map(i => i + 36), // 36-41\n  leftEye: [...Array(6).keys()].map(i => i + 42), // 42-47\n  outerMouth: [...Array(12).keys()].map(i => i + 48), // 48-59\n  innerMouth: [...Array(8).keys()].map(i => i + 60) // 60-67\n};\n\n// Define connections between landmarks\nconst LANDMARK_CONNECTIONS = [\n  // Jawline connections\n  ...FACIAL_REGIONS.jawline.slice(0, -1).map((i, idx) => [i, i + 1]),\n  \n  // Eyebrow connections\n  ...FACIAL_REGIONS.rightEyebrow.slice(0, -1).map((i, idx) => [i, i + 1]),\n  ...FACIAL_REGIONS.leftEyebrow.slice(0, -1).map((i, idx) => [i, i + 1]),\n  \n  // Nose connections\n  [27, 28], [28, 29], [29, 30], // Nose bridge\n  [30, 33], // Nose tip\n  [31, 32], [32, 33], [33, 34], [34, 35], // Nostrils\n  [31, 35], // Nostril connection\n  \n  // Eye connections (circular)\n  ...FACIAL_REGIONS.rightEye.map((i, idx) => [i, FACIAL_REGIONS.rightEye[(idx + 1) % 6]]),\n  ...FACIAL_REGIONS.leftEye.map((i, idx) => [i, FACIAL_REGIONS.leftEye[(idx + 1) % 6]]),\n  \n  // Mouth connections\n  ...FACIAL_REGIONS.outerMouth.map((i, idx) => [i, FACIAL_REGIONS.outerMouth[(idx + 1) % 12]]),\n  ...FACIAL_REGIONS.innerMouth.map((i, idx) => [i, FACIAL_REGIONS.innerMouth[(idx + 1) % 8]])\n];\n\nexport function drawLandmarks(ctx, landmarks, style) {\n  const positions = landmarks.positions;\n  \n  // Draw landmark points\n  positions.forEach((point, index) => {\n    const region = getRegionForPoint(index);\n    const color = style.regionColors[region] || style.landmarkColor;\n    \n    // Draw point with glow effect\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, style.landmarkSize + 1, 0, 2 * Math.PI);\n    ctx.fillStyle = color + '40'; // Semi-transparent glow\n    ctx.fill();\n    \n    ctx.beginPath();\n    ctx.arc(point.x, point.y, style.landmarkSize, 0, 2 * Math.PI);\n    ctx.fillStyle = color;\n    ctx.fill();\n  });\n  \n  // Draw connections between landmarks\n  ctx.strokeStyle = style.connectionColor + '80'; // Semi-transparent connections\n  ctx.lineWidth = 1;\n  \n  LANDMARK_CONNECTIONS.forEach(([start, end]) => {\n    if (positions[start] && positions[end]) {\n      ctx.beginPath();\n      ctx.moveTo(positions[start].x, positions[start].y);\n      ctx.lineTo(positions[end].x, positions[end].y);\n      ctx.stroke();\n    }\n  });\n}\n\nexport function drawFaceContours(ctx, landmarks, style) {\n  const positions = landmarks.positions;\n  \n  // Draw smooth contours for major facial features\n  ctx.strokeStyle = style.contourColor;\n  ctx.lineWidth = 2;\n  ctx.lineCap = 'round';\n  ctx.lineJoin = 'round';\n  \n  // Draw jawline contour\n  drawSmoothCurve(ctx, FACIAL_REGIONS.jawline.map(i => positions[i]));\n  \n  // Draw eyebrow contours\n  drawSmoothCurve(ctx, FACIAL_REGIONS.rightEyebrow.map(i => positions[i]));\n  drawSmoothCurve(ctx, FACIAL_REGIONS.leftEyebrow.map(i => positions[i]));\n  \n  // Draw eye contours\n  drawSmoothCurve(ctx, FACIAL_REGIONS.rightEye.map(i => positions[i]), true);\n  drawSmoothCurve(ctx, FACIAL_REGIONS.leftEye.map(i => positions[i]), true);\n  \n  // Draw mouth contours\n  drawSmoothCurve(ctx, FACIAL_REGIONS.outerMouth.map(i => positions[i]), true);\n  drawSmoothCurve(ctx, FACIAL_REGIONS.innerMouth.map(i => positions[i]), true);\n}\n\nexport function drawExpressions(ctx, expressions, box) {\n  const sortedExpressions = Object.entries(expressions)\n    .filter(([_, value]) => value > 0.1) // Only show expressions above 10% confidence\n    .sort(([_, a], [__, b]) => b - a)\n    .slice(0, 3); // Show top 3 expressions\n  \n  // Position expressions below the face box\n  let yOffset = box.y + box.height + 20;\n  \n  ctx.font = '14px Arial';\n  ctx.textAlign = 'left';\n  \n  sortedExpressions.forEach(([expression, value]) => {\n    const percentage = Math.round(value * 100);\n    const text = `${expression}: ${percentage}%`;\n    \n    // Draw background for better readability\n    const textWidth = ctx.measureText(text).width;\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    ctx.fillRect(box.x, yOffset - 14, textWidth + 10, 18);\n    \n    // Draw expression text\n    ctx.fillStyle = getExpressionColor(expression, value);\n    ctx.fillText(text, box.x + 5, yOffset);\n    \n    yOffset += 20;\n  });\n}\n\nexport function drawAgeGender(ctx, age, gender, box) {\n  const ageText = `Age: ${Math.round(age)}`;\n  const genderText = `Gender: ${gender} (${Math.round(gender === 'male' ? \n    age * 0.95 : age * 1.05)}% confidence)`;\n  \n  // Position above the face box\n  const yPosition = box.y - 10;\n  \n  ctx.font = '14px Arial';\n  ctx.textAlign = 'left';\n  \n  // Draw background\n  const maxWidth = Math.max(\n    ctx.measureText(ageText).width,\n    ctx.measureText(genderText).width\n  );\n  \n  ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n  ctx.fillRect(box.x, yPosition - 35, maxWidth + 10, 40);\n  \n  // Draw text\n  ctx.fillStyle = '#ffffff';\n  ctx.fillText(ageText, box.x + 5, yPosition - 20);\n  ctx.fillText(genderText, box.x + 5, yPosition - 5);\n}\n\n// Helper function to draw smooth curves through points\nfunction drawSmoothCurve(ctx, points, closed = false) {\n  if (points.length < 2) return;\n  \n  ctx.beginPath();\n  ctx.moveTo(points[0].x, points[0].y);\n  \n  // Use quadratic curves for smoother lines\n  for (let i = 1; i < points.length - 1; i++) {\n    const xc = (points[i].x + points[i + 1].x) / 2;\n    const yc = (points[i].y + points[i + 1].y) / 2;\n    ctx.quadraticCurveTo(points[i].x, points[i].y, xc, yc);\n  }\n  \n  // Last point\n  if (closed && points.length > 2) {\n    const xc = (points[points.length - 1].x + points[0].x) / 2;\n    const yc = (points[points.length - 1].y + points[0].y) / 2;\n    ctx.quadraticCurveTo(points[points.length - 1].x, points[points.length - 1].y, xc, yc);\n    ctx.quadraticCurveTo(xc, yc, points[0].x, points[0].y);\n  } else {\n    ctx.lineTo(points[points.length - 1].x, points[points.length - 1].y);\n  }\n  \n  ctx.stroke();\n}\n\n// Helper function to determine which facial region a landmark belongs to\nfunction getRegionForPoint(index) {\n  if (FACIAL_REGIONS.rightEye.includes(index)) return 'rightEye';\n  if (FACIAL_REGIONS.leftEye.includes(index)) return 'leftEye';\n  if (FACIAL_REGIONS.nose.includes(index)) return 'nose';\n  if (FACIAL_REGIONS.outerMouth.includes(index) || \n      FACIAL_REGIONS.innerMouth.includes(index)) return 'mouth';\n  if (FACIAL_REGIONS.jawline.includes(index)) return 'jawline';\n  return 'default';\n}\n\n// Helper function to get color based on expression\nfunction getExpressionColor(expression, value) {\n  const colors = {\n    happy: '#00ff00',\n    sad: '#0000ff',\n    angry: '#ff0000',\n    surprised: '#ffff00',\n    disgusted: '#ff00ff',\n    fearful: '#ff8800',\n    neutral: '#ffffff'\n  };\n  \n  return colors[expression] || '#ffffff';\n}\n\n// Export additional utilities for landmark manipulation\nexport function animateLandmarks(currentLandmarks, targetLandmarks, progress) {\n  if (!currentLandmarks || !targetLandmarks) return currentLandmarks;\n  \n  const positions = currentLandmarks.positions.map((current, i) => {\n    const target = targetLandmarks.positions[i];\n    return {\n      x: current.x + (target.x - current.x) * progress,\n      y: current.y + (target.y - current.y) * progress\n    };\n  });\n  \n  return { positions };\n}\n\nexport function getLandmarkRegions() {\n  return FACIAL_REGIONS;\n}\n\nexport function getLandmarkConnections() {\n  return LANDMARK_CONNECTIONS;\n}","/**\n * Pro Mode Implementation for Face Detection\n * Advanced features including landmarks, expressions, age/gender estimation\n */\n\nimport * as faceapi from 'face-api.js';\nimport { drawLandmarks, drawFaceContours, drawExpressions, drawAgeGender } from './landmarkDrawing';\n\nexport class ProMode {\n  constructor() {\n    this.modelsLoaded = false;\n    this.modelPromise = null;\n    this.detectionOptions = null;\n    this.features = {\n      landmarks: true,\n      expressions: true,\n      ageGender: true,\n      faceRecognition: true,\n      contours: true,\n      regions: true\n    };\n    this.visualizationStyle = {\n      landmarkSize: 2,\n      landmarkColor: '#00ff00',\n      connectionColor: '#00ffff',\n      contourColor: '#ff00ff',\n      regionColors: {\n        leftEye: '#ff0000',\n        rightEye: '#ff0000',\n        nose: '#00ff00',\n        mouth: '#0000ff',\n        jawline: '#ffff00'\n      }\n    };\n  }\n\n  async loadModels() {\n    if (this.modelsLoaded) return;\n    if (this.modelPromise) return this.modelPromise;\n\n    this.modelPromise = (async () => {\n      try {\n        const MODEL_URL = '/models';\n        \n        // Load all required models for Pro mode\n        await Promise.all([\n          faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n          faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\n          faceapi.nets.ageGenderNet.loadFromUri(MODEL_URL),\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\n        ]);\n\n        // Configure detection options for higher accuracy\n        this.detectionOptions = new faceapi.SsdMobilenetv1Options({\n          minConfidence: 0.5,\n          maxResults: 10\n        });\n\n        this.modelsLoaded = true;\n        console.log('Pro mode models loaded successfully');\n      } catch (error) {\n        console.error('Error loading Pro mode models:', error);\n        throw error;\n      }\n    })();\n\n    return this.modelPromise;\n  }\n\n  async detectFaces(video, canvas) {\n    if (!this.modelsLoaded) {\n      await this.loadModels();\n    }\n\n    try {\n      // Perform full face detection with all features\n      const detections = await faceapi\n        .detectAllFaces(video, this.detectionOptions)\n        .withFaceLandmarks()\n        .withFaceExpressions()\n        .withAgeAndGender();\n\n      return detections;\n    } catch (error) {\n      console.error('Pro mode detection error:', error);\n      return [];\n    }\n  }\n\n  drawDetections(canvas, detections, video) {\n    const ctx = canvas.getContext('2d');\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw video frame\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    detections.forEach(detection => {\n      const { detection: faceDetection, landmarks, expressions, age, gender } = detection;\n      \n      // Draw bounding box\n      this.drawBoundingBox(ctx, faceDetection.box);\n      \n      // Draw facial landmarks with connections\n      if (this.features.landmarks && landmarks) {\n        drawLandmarks(ctx, landmarks, this.visualizationStyle);\n      }\n      \n      // Draw face contours\n      if (this.features.contours && landmarks) {\n        drawFaceContours(ctx, landmarks, this.visualizationStyle);\n      }\n      \n      // Draw expressions\n      if (this.features.expressions && expressions) {\n        drawExpressions(ctx, expressions, faceDetection.box);\n      }\n      \n      // Draw age and gender\n      if (this.features.ageGender && age !== undefined && gender) {\n        drawAgeGender(ctx, age, gender, faceDetection.box);\n      }\n    });\n\n    return detections;\n  }\n\n  drawBoundingBox(ctx, box) {\n    const { x, y, width, height } = box;\n    \n    ctx.strokeStyle = '#00ff00';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(x, y, width, height);\n    \n    // Draw corner accents\n    const cornerLength = 20;\n    ctx.lineWidth = 3;\n    \n    // Top-left corner\n    ctx.beginPath();\n    ctx.moveTo(x, y + cornerLength);\n    ctx.lineTo(x, y);\n    ctx.lineTo(x + cornerLength, y);\n    ctx.stroke();\n    \n    // Top-right corner\n    ctx.beginPath();\n    ctx.moveTo(x + width - cornerLength, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + cornerLength);\n    ctx.stroke();\n    \n    // Bottom-left corner\n    ctx.beginPath();\n    ctx.moveTo(x, y + height - cornerLength);\n    ctx.lineTo(x, y + height);\n    ctx.lineTo(x + cornerLength, y + height);\n    ctx.stroke();\n    \n    // Bottom-right corner\n    ctx.beginPath();\n    ctx.moveTo(x + width - cornerLength, y + height);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x + width, y + height - cornerLength);\n    ctx.stroke();\n  }\n\n  toggleFeature(feature) {\n    if (this.features.hasOwnProperty(feature)) {\n      this.features[feature] = !this.features[feature];\n    }\n  }\n\n  updateVisualizationStyle(style) {\n    this.visualizationStyle = { ...this.visualizationStyle, ...style };\n  }\n\n  exportDetectionData(detections) {\n    return detections.map(detection => ({\n      boundingBox: detection.detection.box,\n      landmarks: detection.landmarks ? detection.landmarks.positions.map(p => ({ x: p.x, y: p.y })) : null,\n      expressions: detection.expressions || null,\n      age: detection.age || null,\n      gender: detection.gender || null,\n      confidence: detection.detection.score\n    }));\n  }\n\n  getPerformanceTarget() {\n    return {\n      targetFPS: 20,\n      mode: 'pro',\n      features: Object.keys(this.features).filter(f => this.features[f])\n    };\n  }\n}\n\nexport default ProMode;","import * as faceapi from 'face-api.js';\nimport './styles.css';\nimport { LiteModeDetector } from './liteMode.js';\nimport { ProMode } from './proMode.js';\nimport { CameraManager } from './cameraUtils.js';\nimport { DrawingUtils } from './drawingUtils.js';\nimport { PerformanceMonitor } from './performanceMonitor.js';\n\nexport class FaceDetectionApp {\n  constructor() {\n    this.video = null;\n    this.canvas = null;\n    this.isModelLoaded = false;\n    this.isVideoReady = false;\n    this.detectionInterval = null;\n    this.currentMode = 'full'; // Default to full mode for backward compatibility with tests\n    this.liteModeDetector = null;\n    this.proMode = null;\n    this.performanceMonitor = new PerformanceMonitor();\n  }\n\n  async init() {\n    try {\n      // Always call these methods in order to satisfy tests\n      await this.loadModels();\n      this.setupUI();\n      await this.setupCamera();\n      \n      // Additional initialization for lite mode\n      if (this.currentMode === 'lite') {\n        // Initialize lite mode detector (will use existing camera stream)\n        this.liteModeDetector = new LiteModeDetector({\n          targetFPS: 30,\n          frameSkip: 0,\n          showConfidence: true,\n          boundingBoxColor: '#00ff00',\n          confidenceThreshold: 0.5\n        });\n        \n        // Pass existing video element (already has stream from setupCamera)\n        this.liteModeDetector.video = this.video;\n        this.liteModeDetector.canvas = this.canvas;\n        this.liteModeDetector.drawingUtils.setCanvas(this.canvas);\n        \n        // Load the lite mode model\n        await this.liteModeDetector.detector.loadModel();\n      } else if (this.currentMode === 'pro') {\n        // Initialize pro mode\n        this.proMode = new ProMode();\n        await this.proMode.loadModels();\n      }\n      \n      this.startDetection();\n    } catch (error) {\n      console.error('Failed to initialize app:', error);\n      this.showError('Failed to initialize the application. Please check your camera permissions.');\n    }\n  }\n\n  async loadModels() {\n    const MODEL_URL = '/models';\n    \n    try {\n      await Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.ageGenderNet.loadFromUri(MODEL_URL)\n      ]);\n      \n      this.isModelLoaded = true;\n      console.log('Face detection models loaded successfully');\n    } catch (error) {\n      throw new Error('Failed to load face detection models: ' + error.message);\n    }\n  }\n\n  setupUI() {\n    const app = document.getElementById('app');\n    app.innerHTML = `\n      <div class=\"container\">\n        <h1>Face Detection App</h1>\n        <div class=\"video-container\">\n          <video id=\"video\" autoplay muted></video>\n          <canvas id=\"overlay\"></canvas>\n        </div>\n        <div class=\"controls\">\n          <div class=\"mode-selector\">\n            <label>\n              <input type=\"radio\" name=\"mode\" value=\"lite\" ${this.currentMode === 'lite' ? 'checked' : ''}>\n              Lite Mode (Bounding Boxes)\n            </label>\n            <label>\n              <input type=\"radio\" name=\"mode\" value=\"pro\" ${this.currentMode === 'pro' ? 'checked' : ''}>\n              Pro Mode (Advanced Features)\n            </label>\n            <label>\n              <input type=\"radio\" name=\"mode\" value=\"full\" ${this.currentMode === 'full' ? 'checked' : ''}>\n              Full Mode (All Features)\n            </label>\n          </div>\n          <div id=\"pro-controls\" class=\"pro-controls\" style=\"display: ${this.currentMode === 'pro' ? 'block' : 'none'};\">\n            <h3>Pro Mode Features</h3>\n            <label><input type=\"checkbox\" id=\"landmarks\" checked> 68-point Landmarks</label>\n            <label><input type=\"checkbox\" id=\"expressions\" checked> Facial Expressions</label>\n            <label><input type=\"checkbox\" id=\"ageGender\" checked> Age & Gender</label>\n            <label><input type=\"checkbox\" id=\"contours\" checked> Face Contours</label>\n            <label><input type=\"checkbox\" id=\"regions\" checked> Region Highlighting</label>\n          </div>\n          <button id=\"startBtn\" class=\"btn btn-primary\">Start Detection</button>\n          <button id=\"stopBtn\" class=\"btn btn-secondary\" disabled>Stop Detection</button>\n          <div class=\"threshold-control\">\n            <label for=\"threshold\">Detection Threshold: <span id=\"thresholdValue\">0.5</span></label>\n            <input type=\"range\" id=\"threshold\" min=\"0.1\" max=\"0.9\" step=\"0.1\" value=\"0.5\">\n          </div>\n        </div>\n        <div id=\"stats\" class=\"stats\"></div>\n      </div>\n    `;\n\n    this.video = document.getElementById('video');\n    this.canvas = document.getElementById('overlay');\n    \n    // Use onclick to match test expectations\n    document.getElementById('startBtn').onclick = () => this.startDetection();\n    document.getElementById('stopBtn').onclick = () => this.stopDetection();\n    \n    // Mode switching\n    document.querySelectorAll('input[name=\"mode\"]').forEach(radio => {\n      radio.addEventListener('change', (e) => {\n        this.switchMode(e.target.value);\n        // Show/hide pro controls\n        document.getElementById('pro-controls').style.display = \n          e.target.value === 'pro' ? 'block' : 'none';\n      });\n    });\n    \n    // Pro mode feature toggles\n    if (this.currentMode === 'pro') {\n      this.setupProModeControls();\n    }\n    \n    // Threshold control\n    const thresholdSlider = document.getElementById('threshold');\n    thresholdSlider.addEventListener('input', (e) => {\n      const value = parseFloat(e.target.value);\n      document.getElementById('thresholdValue').textContent = value.toFixed(1);\n      this.updateThreshold(value);\n    });\n  }\n\n  async setupCamera() {\n    try {\n      // Check if video element exists\n      if (!this.video) {\n        throw new Error('Video element not found');\n      }\n      \n      // Check if navigator.mediaDevices exists\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error('getUserMedia is not supported');\n      }\n      \n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: { width: 640, height: 480 }\n      });\n      \n      this.video.srcObject = stream;\n      \n      return new Promise((resolve) => {\n        this.video.onloadedmetadata = () => {\n          this.isVideoReady = true;\n          this.adjustCanvas();\n          resolve();\n        };\n      });\n    } catch (error) {\n      throw new Error('Camera access denied or not available');\n    }\n  }\n\n  adjustCanvas() {\n    this.canvas.width = this.video.videoWidth;\n    this.canvas.height = this.video.videoHeight;\n  }\n\n  setupProModeControls() {\n    const features = ['landmarks', 'expressions', 'ageGender', 'contours', 'regions'];\n    features.forEach(feature => {\n      const checkbox = document.getElementById(feature);\n      if (checkbox) {\n        checkbox.addEventListener('change', (e) => {\n          if (this.proMode) {\n            this.proMode.toggleFeature(feature);\n          }\n        });\n      }\n    });\n  }\n\n  async startDetection() {\n    if (this.currentMode === 'lite') {\n      if (!this.liteModeDetector) {\n        console.error('Lite mode detector not initialized');\n        return;\n      }\n      document.getElementById('startBtn').disabled = true;\n      document.getElementById('stopBtn').disabled = false;\n      this.liteModeDetector.start();\n    } else if (this.currentMode === 'pro') {\n      if (!this.proMode || !this.isVideoReady) {\n        console.error('Pro mode or video not ready');\n        return;\n      }\n\n      document.getElementById('startBtn').disabled = true;\n      document.getElementById('stopBtn').disabled = false;\n\n      // Use performance monitor for pro mode\n      this.performanceMonitor.start();\n\n      this.detectionInterval = setInterval(async () => {\n        await this.detectFacesPro();\n      }, 50); // 20 FPS target for pro mode\n    } else {\n      if (!this.isModelLoaded || !this.isVideoReady) {\n        console.error('Models or video not ready');\n        return;\n      }\n\n      document.getElementById('startBtn').disabled = true;\n      document.getElementById('stopBtn').disabled = false;\n\n      this.detectionInterval = setInterval(async () => {\n        await this.detectFaces();\n      }, 100);\n    }\n  }\n\n  stopDetection() {\n    if (this.currentMode === 'lite' && this.liteModeDetector) {\n      this.liteModeDetector.stop();\n    } else if (this.detectionInterval) {\n      clearInterval(this.detectionInterval);\n      this.detectionInterval = null;\n      // Clear canvas\n      const ctx = this.canvas.getContext('2d');\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      \n      if (this.currentMode === 'pro') {\n        this.performanceMonitor.stop();\n      }\n    }\n\n    document.getElementById('startBtn').disabled = false;\n    document.getElementById('stopBtn').disabled = true;\n  }\n\n  async detectFaces() {\n    const detections = await faceapi.detectAllFaces(\n      this.video,\n      new faceapi.TinyFaceDetectorOptions()\n    )\n    .withFaceLandmarks()\n    .withFaceExpressions()\n    .withAgeAndGender();\n\n    const displaySize = {\n      width: this.video.videoWidth,\n      height: this.video.videoHeight\n    };\n\n    const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n    const ctx = this.canvas.getContext('2d');\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Draw detections\n    faceapi.draw.drawDetections(this.canvas, resizedDetections);\n    faceapi.draw.drawFaceLandmarks(this.canvas, resizedDetections);\n    faceapi.draw.drawFaceExpressions(this.canvas, resizedDetections);\n\n    // Draw age and gender\n    resizedDetections.forEach(detection => {\n      const { age, gender, genderProbability } = detection;\n      const { x, y, width, height } = detection.detection.box;\n      \n      ctx.font = '18px Arial';\n      ctx.fillStyle = '#00ff00';\n      ctx.fillText(\n        `${Math.round(age)} years, ${gender} (${Math.round(genderProbability * 100)}%)`,\n        x,\n        y - 10\n      );\n    });\n\n    // Update stats\n    this.updateStats(detections.length);\n  }\n\n  async detectFacesPro() {\n    if (!this.proMode) return;\n\n    const startTime = performance.now();\n\n    try {\n      // Perform detection with pro mode\n      const detections = await this.proMode.detectFaces(this.video, this.canvas);\n      \n      // Draw all detections with advanced visualizations\n      this.proMode.drawDetections(this.canvas, detections, this.video);\n      \n      // Update performance metrics\n      const frameTime = performance.now() - startTime;\n      this.performanceMonitor.recordFrame(frameTime, detections.length);\n      \n      // Update stats with pro mode info\n      this.updateProStats(detections);\n    } catch (error) {\n      console.error('Pro mode detection error:', error);\n    }\n  }\n\n  updateStats(faceCount) {\n    const stats = document.getElementById('stats');\n    stats.innerHTML = `\n      <p>Faces detected: <strong>${faceCount}</strong></p>\n      <p>Model: TinyFaceDetector</p>\n      <p>Features: Landmarks, Expressions, Age & Gender</p>\n    `;\n  }\n\n  updateProStats(detections) {\n    const stats = document.getElementById('stats');\n    const perfData = this.performanceMonitor.getMetrics();\n    \n    let expressionsSummary = '';\n    if (detections.length > 0 && detections[0].expressions) {\n      const topExpression = Object.entries(detections[0].expressions)\n        .sort(([,a], [,b]) => b - a)[0];\n      expressionsSummary = `<p>Top Expression: <strong>${topExpression[0]} (${Math.round(topExpression[1] * 100)}%)</strong></p>`;\n    }\n    \n    stats.innerHTML = `\n      <p>Faces detected: <strong>${detections.length}</strong></p>\n      <p>Mode: <strong>Pro Mode</strong></p>\n      <p>Model: SSD MobileNet v1</p>\n      <p>Features: 68-point landmarks, Expressions, Age/Gender</p>\n      ${expressionsSummary}\n      <p>FPS: <strong>${perfData.fps.toFixed(1)}</strong> (Target: 20)</p>\n      <p>Frame Time: <strong>${perfData.avgFrameTime.toFixed(1)}ms</strong></p>\n    `;\n  }\n\n  showError(message) {\n    const app = document.getElementById('app');\n    app.innerHTML = `\n      <div class=\"error\">\n        <h2>Error</h2>\n        <p>${message}</p>\n      </div>\n    `;\n  }\n\n  async switchMode(mode) {\n    // Stop current detection\n    this.stopDetection();\n    \n    // Clean up current mode\n    if (this.currentMode === 'lite' && this.liteModeDetector) {\n      await this.liteModeDetector.cleanup();\n      this.liteModeDetector = null;\n    } else if (this.currentMode === 'pro' && this.proMode) {\n      this.proMode = null;\n    }\n    \n    // Switch mode\n    this.currentMode = mode;\n    console.log(`Switching to ${mode} mode`);\n    \n    // Re-initialize with new mode\n    try {\n      if (mode === 'lite') {\n        this.liteModeDetector = new LiteModeDetector({\n          targetFPS: 30,\n          frameSkip: 0,\n          showConfidence: true,\n          boundingBoxColor: '#00ff00',\n          confidenceThreshold: parseFloat(document.getElementById('threshold').value)\n        });\n        await this.liteModeDetector.initialize(this.video, this.canvas);\n        this.isModelLoaded = true;\n        this.isVideoReady = true;\n      } else if (mode === 'pro') {\n        this.proMode = new ProMode();\n        await this.proMode.loadModels();\n        this.isModelLoaded = true;\n        this.isVideoReady = true;\n        // Setup pro mode controls after switching\n        this.setupProModeControls();\n      } else {\n        if (!this.isModelLoaded) {\n          await this.loadModels();\n        }\n        if (!this.isVideoReady) {\n          await this.setupCamera();\n        }\n      }\n    } catch (error) {\n      console.error('Failed to switch mode:', error);\n      this.showError('Failed to switch mode. Please try again.');\n    }\n  }\n\n  updateThreshold(value) {\n    if (this.currentMode === 'lite' && this.liteModeDetector) {\n      this.liteModeDetector.setDetectionThreshold(value);\n    }\n  }\n}\n\n// Initialize app when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  const app = new FaceDetectionApp();\n  app.init();\n  // Expose app instance for testing\n  window.app = app;\n});","/* (ignored) */","/* (ignored) */","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\n  background-color: #f5f5f5;\n  color: #333;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: center;\n}\n\nh1 {\n  color: #2c3e50;\n  margin-bottom: 30px;\n}\n\n.video-container {\n  position: relative;\n  display: inline-block;\n  margin: 20px auto;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n#video {\n  display: block;\n  transform: scaleX(-1);\n}\n\n#overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: scaleX(-1);\n}\n\n.controls {\n  margin: 20px 0;\n}\n\n.mode-selector {\n  margin-bottom: 15px;\n  padding: 15px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.mode-selector label {\n  margin: 0 15px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.mode-selector input[type=\"radio\"] {\n  margin-right: 5px;\n  cursor: pointer;\n}\n\n.threshold-control {\n  margin-top: 15px;\n  padding: 15px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.threshold-control label {\n  display: block;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.threshold-control input[type=\"range\"] {\n  width: 100%;\n  max-width: 300px;\n  margin: 0 auto;\n  display: block;\n}\n\n#thresholdValue {\n  color: #3498db;\n  font-weight: bold;\n}\n\n.btn {\n  padding: 10px 20px;\n  margin: 0 10px;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.btn-primary {\n  background-color: #3498db;\n  color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background-color: #2980b9;\n}\n\n.btn-secondary {\n  background-color: #e74c3c;\n  color: white;\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background-color: #c0392b;\n}\n\n.stats {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n}\n\n.stats p {\n  margin: 10px 0;\n  font-size: 14px;\n}\n\n.error {\n  background-color: #fee;\n  color: #c33;\n  padding: 20px;\n  border-radius: 8px;\n  margin: 20px auto;\n  max-width: 600px;\n}\n\n.loading {\n  text-align: center;\n  padding: 50px;\n}\n\n.loading h2 {\n  color: #666;\n}\n\n@media (max-width: 768px) {\n  .container {\n    padding: 10px;\n  }\n\n  .video-container {\n    width: 100%;\n    max-width: 400px;\n  }\n\n  #video, #overlay {\n    width: 100%;\n    height: auto;\n  }\n\n  .btn {\n    padding: 8px 16px;\n    font-size: 14px;\n  }\n}\n\n/* Pro Mode Styles */\n.pro-controls {\n  margin-top: 15px;\n  padding: 15px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  text-align: left;\n}\n\n.pro-controls h3 {\n  margin: 0 0 15px 0;\n  color: #2c3e50;\n  font-size: 16px;\n  text-align: center;\n}\n\n.pro-controls label {\n  display: block;\n  margin: 8px 0;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 5px 0;\n}\n\n.pro-controls label:hover {\n  color: #3498db;\n}\n\n.pro-controls input[type=\"checkbox\"] {\n  margin-right: 8px;\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n}\n\n/* Pro mode canvas styling */\n.video-container.pro-mode {\n  border: 2px solid #3498db;\n  box-shadow: 0 0 20px rgba(52, 152, 219, 0.3);\n}\n\n/* Animation for landmark transitions */\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.1);\n    opacity: 0.8;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n.landmark-point {\n  animation: pulse 2s ease-in-out infinite;\n}\n\n/* Expression labels styling */\n.expression-label {\n  background-color: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n/* Stats styling for pro mode */\n.stats.pro-mode {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n}\n\n.stats.pro-mode p {\n  color: white;\n}\n\n.stats.pro-mode strong {\n  color: #ffd700;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"* {\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\\n  background-color: #f5f5f5;\\n  color: #333;\\n}\\n\\n.container {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  text-align: center;\\n}\\n\\nh1 {\\n  color: #2c3e50;\\n  margin-bottom: 30px;\\n}\\n\\n.video-container {\\n  position: relative;\\n  display: inline-block;\\n  margin: 20px auto;\\n  border-radius: 8px;\\n  overflow: hidden;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n}\\n\\n#video {\\n  display: block;\\n  transform: scaleX(-1);\\n}\\n\\n#overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  transform: scaleX(-1);\\n}\\n\\n.controls {\\n  margin: 20px 0;\\n}\\n\\n.mode-selector {\\n  margin-bottom: 15px;\\n  padding: 15px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.mode-selector label {\\n  margin: 0 15px;\\n  cursor: pointer;\\n  font-size: 14px;\\n}\\n\\n.mode-selector input[type=\\\"radio\\\"] {\\n  margin-right: 5px;\\n  cursor: pointer;\\n}\\n\\n.threshold-control {\\n  margin-top: 15px;\\n  padding: 15px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.threshold-control label {\\n  display: block;\\n  margin-bottom: 10px;\\n  font-weight: 500;\\n  font-size: 14px;\\n}\\n\\n.threshold-control input[type=\\\"range\\\"] {\\n  width: 100%;\\n  max-width: 300px;\\n  margin: 0 auto;\\n  display: block;\\n}\\n\\n#thresholdValue {\\n  color: #3498db;\\n  font-weight: bold;\\n}\\n\\n.btn {\\n  padding: 10px 20px;\\n  margin: 0 10px;\\n  border: none;\\n  border-radius: 5px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.btn:disabled {\\n  opacity: 0.6;\\n  cursor: not-allowed;\\n}\\n\\n.btn-primary {\\n  background-color: #3498db;\\n  color: white;\\n}\\n\\n.btn-primary:hover:not(:disabled) {\\n  background-color: #2980b9;\\n}\\n\\n.btn-secondary {\\n  background-color: #e74c3c;\\n  color: white;\\n}\\n\\n.btn-secondary:hover:not(:disabled) {\\n  background-color: #c0392b;\\n}\\n\\n.stats {\\n  background-color: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  margin-top: 20px;\\n}\\n\\n.stats p {\\n  margin: 10px 0;\\n  font-size: 14px;\\n}\\n\\n.error {\\n  background-color: #fee;\\n  color: #c33;\\n  padding: 20px;\\n  border-radius: 8px;\\n  margin: 20px auto;\\n  max-width: 600px;\\n}\\n\\n.loading {\\n  text-align: center;\\n  padding: 50px;\\n}\\n\\n.loading h2 {\\n  color: #666;\\n}\\n\\n@media (max-width: 768px) {\\n  .container {\\n    padding: 10px;\\n  }\\n\\n  .video-container {\\n    width: 100%;\\n    max-width: 400px;\\n  }\\n\\n  #video, #overlay {\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .btn {\\n    padding: 8px 16px;\\n    font-size: 14px;\\n  }\\n}\\n\\n/* Pro Mode Styles */\\n.pro-controls {\\n  margin-top: 15px;\\n  padding: 15px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  text-align: left;\\n}\\n\\n.pro-controls h3 {\\n  margin: 0 0 15px 0;\\n  color: #2c3e50;\\n  font-size: 16px;\\n  text-align: center;\\n}\\n\\n.pro-controls label {\\n  display: block;\\n  margin: 8px 0;\\n  cursor: pointer;\\n  font-size: 14px;\\n  padding: 5px 0;\\n}\\n\\n.pro-controls label:hover {\\n  color: #3498db;\\n}\\n\\n.pro-controls input[type=\\\"checkbox\\\"] {\\n  margin-right: 8px;\\n  cursor: pointer;\\n  width: 16px;\\n  height: 16px;\\n}\\n\\n/* Pro mode canvas styling */\\n.video-container.pro-mode {\\n  border: 2px solid #3498db;\\n  box-shadow: 0 0 20px rgba(52, 152, 219, 0.3);\\n}\\n\\n/* Animation for landmark transitions */\\n@keyframes pulse {\\n  0% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n  50% {\\n    transform: scale(1.1);\\n    opacity: 0.8;\\n  }\\n  100% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n\\n.landmark-point {\\n  animation: pulse 2s ease-in-out infinite;\\n}\\n\\n/* Expression labels styling */\\n.expression-label {\\n  background-color: rgba(0, 0, 0, 0.8);\\n  color: white;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: bold;\\n}\\n\\n/* Stats styling for pro mode */\\n.stats.pro-mode {\\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n  color: white;\\n}\\n\\n.stats.pro-mode p {\\n  color: white;\\n}\\n\\n.stats.pro-mode strong {\\n  color: #ffd700;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/* (ignored) */"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","_typeof","toPrimitive","String","Number","faceapi","FaceDetector","options","undefined","modelPath","detectionThreshold","inputSize","isModelLoaded","detector","_loadModel","_callee","_t","_context","nets","tinyFaceDetector","loadFromUri","TinyFaceDetectorOptions","scoreThreshold","console","error","Error","message","loadModel","_detect","_callee2","input","detections","_t2","_context2","detectAllFaces","detect","_x","_detectWithLandmarks","_callee3","_t3","_context3","withFaceLandmarks","detectWithLandmarks","_x2","setDetectionThreshold","threshold","setInputSize","size","validSizes","includes","concat","join","getOptions","isReady","DrawingUtils","canvas","ctx","getContext","setCanvas","clear","clearRect","width","height","drawBoundingBox","box","color","lineWidth","x","strokeStyle","strokeRect","drawFilledBox","fillColor","borderColor","borderWidth","fillStyle","fillRect","drawText","text","_options$color","_options$font","font","_options$align","align","_options$baseline","baseline","_options$backgroundCo","backgroundColor","_options$padding","padding","_options$borderRadius","borderRadius","textAlign","textBaseline","metrics","measureText","textWidth","textHeight","parseInt","drawRoundedRect","fillText","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","drawPoint","arc","Math","PI","drawLine","x1","y1","x2","y2","stroke","drawPolygon","points","_options$fillColor","_options$strokeColor","strokeColor","_options$lineWidth","_options$closed","closed","drawCircle","_options$fillColor2","_options$strokeColor2","_options$lineWidth2","drawImage","image","setGlobalAlpha","alpha","globalAlpha","max","min","save","restore","previousFont","CameraManager","preferredWidth","preferredHeight","facingMode","stream","videoElement","isActive","_startCamera","constraints","warn","navigator","mediaDevices","getUserMedia","video","ideal","srcObject","waitForVideoReady","handleCameraError","startCamera","_waitForVideoReady","_this","reject","readyState","timeout","setTimeout","addEventListener","clearTimeout","once","errorMessage","name","_stopCamera","getTracks","track","stop","stopCamera","_switchCamera","_callee4","_context4","switchCamera","_getAvailableCameras","_callee5","devices","_context5","enumerateDevices","device","kind","getAvailableCameras","_selectCamera","_callee6","deviceId","_context6","selectCamera","getCameraConstraints","exact","getStreamInfo","active","videoTrack","getVideoTracks","settings","getSettings","frameRate","label","isStreamActive","_takeSnapshot","_callee7","_context7","document","createElement","videoWidth","videoHeight","toDataURL","takeSnapshot","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","constructor","Array","from","test","isArray","PerformanceMonitor","sampleSize","warningThreshold","reset","frameTimes","frameStartTime","lastFrameTime","totalFrames","Map","startTime","performance","now","startFrame","endFrame","frameTime","shift","getCurrentFPS","averageFrameTime","getAverageFrameTime","round","sum","reduce","acc","time","getMinFrameTime","getMaxFrameTime","start","set","endTime","duration","end","metric","get","measure","fn","result","_measureAsync","asyncFn","measureAsync","getMetric","getAllMetrics","results","_iterator","_createForOfIteratorHelper","_step","s","_step$value","_slicedToArray","err","getSummary","fps","avgFrameTime","minFrameTime","maxFrameTime","totalTime","averageFPS","isPerformanceGood","getFrameTimeDistribution","buckets","getPerformanceScore","fpsScore","minTime","maxTime","variance","consistencyScore","logSummary","summary","group","log","toFixed","distribution","groupEnd","global","LiteModeDetector","targetFPS","frameSkip","showConfidence","boundingBoxColor","boundingBoxWidth","confidenceThreshold","drawingUtils","cameraManager","performanceMonitor","isRunning","frameCount","animationId","_initialize","canvasElement","adjustCanvasSize","initialize","detectLoop","cancelAnimationFrame","_detectLoop","displaySize","resizedDetections","requestAnimationFrame","resizeResults","detection","score","confidence","updatePerformanceDisplay","avgDetectionTime","setFrameSkip","skip","setBoundingBoxStyle","getPerformanceStats","_cleanup","cleanup","FACIAL_REGIONS","jawline","rightEyebrow","map","leftEyebrow","nose","rightEye","leftEye","outerMouth","innerMouth","LANDMARK_CONNECTIONS","idx","drawLandmarks","landmarks","style","positions","point","index","region","getRegionForPoint","regionColors","landmarkColor","landmarkSize","connectionColor","_ref","_ref2","drawFaceContours","contourColor","lineCap","lineJoin","drawSmoothCurve","drawExpressions","expressions","sortedExpressions","entries","_ref3","_ref4","_","sort","_ref5","_ref6","_ref7","_ref8","__","b","yOffset","_ref9","_ref0","expression","percentage","getExpressionColor","drawAgeGender","age","gender","ageText","genderText","yPosition","maxWidth","xc","yc","colors","happy","sad","angry","surprised","disgusted","fearful","neutral","animateLandmarks","currentLandmarks","targetLandmarks","progress","current","target","getLandmarkRegions","getLandmarkConnections","ProMode","modelsLoaded","modelPromise","detectionOptions","features","ageGender","faceRecognition","contours","regions","visualizationStyle","mouth","_loadModels","MODEL_URL","all","ssdMobilenetv1","faceLandmark68Net","faceExpressionNet","ageGenderNet","faceRecognitionNet","SsdMobilenetv1Options","minConfidence","maxResults","loadModels","_detectFaces","withFaceExpressions","withAgeAndGender","detectFaces","drawDetections","_this2","faceDetection","cornerLength","toggleFeature","feature","hasOwnProperty","updateVisualizationStyle","exportDetectionData","boundingBox","getPerformanceTarget","_this3","mode","FaceDetectionApp","isVideoReady","detectionInterval","currentMode","liteModeDetector","proMode","_init","setupUI","setupCamera","startDetection","showError","init","app","getElementById","innerHTML","onclick","stopDetection","querySelectorAll","radio","switchMode","display","setupProModeControls","thresholdSlider","parseFloat","textContent","updateThreshold","_setupCamera","onloadedmetadata","adjustCanvas","checkbox","_startDetection","_this4","disabled","setInterval","detectFacesPro","clearInterval","draw","drawFaceLandmarks","drawFaceExpressions","genderProbability","_detection$detection$","updateStats","_detectFacesPro","_callee8","_t4","_context8","recordFrame","updateProStats","faceCount","stats","perfData","getMetrics","expressionsSummary","topExpression","_switchMode","_callee9","_t5","_context9","window"],"sourceRoot":""}
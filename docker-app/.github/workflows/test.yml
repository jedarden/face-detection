name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./docker-app
    
    - name: Run linting
      run: npm run lint
      working-directory: ./docker-app
    
    - name: Run unit and integration tests
      run: npm test -- --coverage --maxWorkers=2
      working-directory: ./docker-app
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./docker-app/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
    
    - name: Build application
      run: npm run build
      working-directory: ./docker-app
    
    - name: Start server for E2E tests
      run: |
        npm start &
        npx wait-on http://localhost:8080
      working-directory: ./docker-app
    
    - name: Run E2E tests
      run: npm run test:e2e
      working-directory: ./docker-app
      env:
        BASE_URL: http://localhost:8080
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          docker-app/coverage/
          docker-app/test-results/
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const coverage = require('./docker-app/coverage/coverage-summary.json');
          const total = coverage.total;
          
          const comment = `## Test Results
          
          âœ… All tests passed!
          
          ### Coverage Report
          - Statements: ${total.statements.pct}%
          - Branches: ${total.branches.pct}%
          - Functions: ${total.functions.pct}%
          - Lines: ${total.lines.pct}%
          
          Node Version: ${{ matrix.node-version }}`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: docker build -t face-detection-app .
      working-directory: ./docker-app
    
    - name: Run Docker container
      run: |
        docker run -d -p 8080:80 --name face-detection face-detection-app
        sleep 5
    
    - name: Test Docker container
      run: |
        curl -f http://localhost:8080 || exit 1
        docker logs face-detection
    
    - name: Stop Docker container
      run: docker stop face-detection